## @file
# CI configuration for UefiCpuPkg
#
# Copyright (c) Microsoft Corporation
# Copyright (c) 2020, Intel Corporation. All rights reserved.<BR>
# Copyright (c) 2022 Hewlett Packard Enterprise Development LP. All rights reserved.<BR>
# SPDX-License-Identifier: BSD-2-Clause-Patent
##
{
    "LicenseCheck": {
        "IgnoreFiles": []
    },
    "EccCheck": {
        ## Exception sample looks like below:
        ## "ExceptionList": [
        ##     "<ErrorID>", "<KeyWord>"
        ## ]
        "ExceptionList": [
        ],
        ## Both file path and directory path are accepted.
        "IgnoreFiles": [
            ## Below source files incorporate with open source
            ## RISC-V OpenSBI project, in which some coding style is
            ## not able to pass the ECC.
            "Library/RISC-V/RiscVOpensbiLib/opensbi"
        ]
    },
    "CompilerPlugin": {
        "DscPath": "UefiCpuPkg.dsc"
    },
    ## options defined ci/Plugin/HostUnitTestCompilerPlugin
    "HostUnitTestCompilerPlugin": {
        "DscPath": "Test/UefiCpuPkgHostTest.dsc"
    },
    "CharEncodingCheck": {
        "IgnoreFiles": []
    },
    "DependencyCheck": {
        "AcceptableDependencies": [
            "MdePkg/MdePkg.dec",
            "MdeModulePkg/MdeModulePkg.dec",
            "UefiCpuPkg/UefiCpuPkg.dec"
        ],
        # For host based unit tests
        "AcceptableDependencies-HOST_APPLICATION":[
            "UnitTestFrameworkPkg/UnitTestFrameworkPkg.dec"
        ],
        # For UEFI shell based apps
        "AcceptableDependencies-UEFI_APPLICATION":[],
        "IgnoreInf": []
    },
    "DscCompleteCheck": {
        "DscPath": "UefiCpuPkg.dsc",
        "IgnoreInf": [
            "UefiCpuPkg/ResetVector/FixupVtf/Vtf.inf",
            "UefiCpuPkg/ResetVector/Vtf0/Vtf0.inf",
            "UefiCpuPkg/ResetVector/Vtf0/Bin/ResetVector1G.inf"
        ]
    },
    "HostUnitTestDscCompleteCheck": {
        "IgnoreInf": [""],
        "DscPath": "Test/UefiCpuPkgHostTest.dsc"
    },
    "GuidCheck": {
        "IgnoreGuidName": ["SecCore", "ResetVector"], # Expected duplication for gEfiFirmwareVolumeTopFileGuid
        "IgnoreGuidValue": [],
        "IgnoreFoldersAndFiles": [],
        "IgnoreDuplicates": []
    },
    "LibraryClassCheck": {
        "IgnoreHeaderFile": []
    },

    ## options defined ci/Plugin/SpellCheck
    "SpellCheck": {
        "AuditOnly": True,           # Fails test but run in AuditOnly mode to collect log
        "IgnoreFiles": [             # use gitignore syntax to ignore errors in matching files
            "Library/RISC-V/RiscVOpensbiLib/opensbi/**"
        ],
        "ExtendWords": [            # words to extend to the dictionary for this package
            "aclint",
            "dmdepkg",
            "ecall",
            "ecalls",
            "efifstub",
            "excep",
            "execption",
            "gaisler",
            "hardfp",
            "hfence",
            "htimehw",
            "htimew",
            "impid",
            "irqchip",
            "keepexceptiontable",
            "libfdt",
            "mbase",
            "mbound",
            "mcause",
            "mdbase",
            "mdbound",
            "memeory",
            "mfromhost",
            "mhartid",
            "mibase",
            "mibound",
            "mideleg",
            "mscratch",
            "mstatus",
            "mtimeh",
            "mtimer",
            "mtohost",
            "mtvec",
            "mvendorid",
            "opensbi",
            "prilx",
            "rfence",
            "scasue",
            "scause",
            "sfence",
            "sifive",
            "smode",
            "sramt",
            "sscratch",
            "sstatus",
            "stval",
            "stvec",
            "transational"
        ],
        "IgnoreStandardPaths": [],   # Standard Plugin defined paths that should be ignore
        "AdditionalIncludePaths": [] # Additional paths to spell check (wildcards supported)
    }
}
