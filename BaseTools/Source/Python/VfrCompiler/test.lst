//
//  VFR compiler version 2.01 (UEFI 2.4) Developer Build based on Revision: Unknown
//
#line 1 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"
#line 1 "c:\\edk2\\Build\\Ovmf3264\\DEBUG_VS2019\\X64\\MdeModulePkg\\Universal\\DriverSampleDxe\\DriverSampleDxe\\DEBUG\\DriverSampleStrDefs.h"





































































































































































































































extern unsigned char DriverSampleStrings[];



























#line 259 "c:\\edk2\\Build\\Ovmf3264\\DEBUG_VS2019\\X64\\MdeModulePkg\\Universal\\DriverSampleDxe\\DriverSampleDxe\\DEBUG\\DriverSampleStrDefs.h"

#line 261 "c:\\edk2\\Build\\Ovmf3264\\DEBUG_VS2019\\X64\\MdeModulePkg\\Universal\\DriverSampleDxe\\DriverSampleDxe\\DEBUG\\DriverSampleStrDefs.h"
#line 1 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"











#line 1 "c:\\edk2\\MdePkg\\Include\\Uefi/UefiMultiPhase.h"




































































































































































































































#line 230 "c:\\edk2\\MdePkg\\Include\\Uefi/UefiMultiPhase.h"
#line 13 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"
#line 1 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"






















#line 1 "c:\\edk2\\MdePkg\\Include\\Guid/HiiPlatformSetupFormset.h"



























extern EFI_GUID  gEfiHiiPlatformSetupFormsetGuid;
extern EFI_GUID  gEfiHiiDriverHealthFormsetGuid;
extern EFI_GUID  gEfiHiiUserCredentialFormsetGuid;
extern EFI_GUID  gEfiHiiRestStyleFormsetGuid;

#line 34 "c:\\edk2\\MdePkg\\Include\\Guid/HiiPlatformSetupFormset.h"
#line 24 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 1 "c:\\edk2\\MdePkg\\Include\\Guid/HiiFormMapMethodGuid.h"
















extern EFI_GUID  gEfiHiiStandardFormGuid;

#line 20 "c:\\edk2\\MdePkg\\Include\\Guid/HiiFormMapMethodGuid.h"
#line 25 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 1 "c:\\edk2\\MdeModulePkg\\Include\\Guid/DriverSampleHii.h"


























extern EFI_GUID  { 0xA04A27f4, 0xDF00, 0x4D42, { 0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D }};
extern EFI_GUID  { 0xb3f56470, 0x6141, 0x4621, { 0x8f, 0x19, 0x70, 0x4e, 0x57, 0x7a, 0xa9, 0xe8 }};
extern EFI_GUID  { 0xF5E655D9, 0x02A6, 0x46f2, { 0x9E, 0x76, 0xB8, 0xBE, 0x8E, 0x60, 0xAB, 0x22 }};

#line 32 "c:\\edk2\\MdeModulePkg\\Include\\Guid/DriverSampleHii.h"
#line 26 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 1 "c:\\edk2\\MdeModulePkg\\Include\\Guid/ZeroGuid.h"
















extern EFI_GUID  gZeroGuid;

#line 20 "c:\\edk2\\MdeModulePkg\\Include\\Guid/ZeroGuid.h"
#line 27 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"




#pragma pack(1)









typedef struct {
  UINT16    NestByteField;
  UINT8                     : 1;
  UINT8     NestBitCheckbox : 1;
  UINT8     NestBitOneof    : 2;
  UINT8                     : 0;
  UINT8     NestBitNumeric  : 4;
} MY_BITS_DATA;

typedef union {
  UINT8    UnionNumeric;
  UINT8    UnionNumericAlias;
} MY_EFI_UNION_DATA;

typedef struct {
  UINT16               MyStringData[40];
  UINT16               SomethingHiddenForHtml;
  UINT8                HowOldAreYouInYearsManual;
  UINT16               HowTallAreYouManual;
  UINT8                HowOldAreYouInYears;
  UINT16               HowTallAreYou;
  UINT8                MyFavoriteNumber;
  UINT8                TestLateCheck;
  UINT8                TestLateCheck2;
  UINT8                QuestionAboutTreeHugging;
  UINT8                ChooseToActivateNuclearWeaponry;
  UINT8                SuppressGrayOutSomething;
  UINT8                OrderedList[8];
  UINT16               BootOrder[8];
  UINT8                BootOrderLarge;
  UINT8                DynamicRefresh;
  UINT8                DynamicOneof;
  UINT8                DynamicOrderedList[5];
  UINT8                Reserved;
  EFI_HII_REF          RefData;
  UINT8                NameValueVar0;
  UINT16               NameValueVar1;
  UINT16               NameValueVar2[20];
  UINT8                SerialPortNo;
  UINT8                SerialPortStatus;
  UINT16               SerialPortIo;
  UINT8                SerialPortIrq;
  UINT8                GetDefaultValueFromCallBack;
  UINT8                GetDefaultValueFromAccess;
  EFI_HII_TIME         Time;
  UINT8                RefreshGuidCount;
  UINT8                Match2;
  UINT8                GetDefaultValueFromCallBackForOrderedList[3];
  UINT8                BitCheckbox  : 1;
  UINT8                ReservedBits : 7;
  UINT16               BitOneof     : 6;
  UINT16                            : 0;
  UINT16               BitNumeric   : 12;
  MY_BITS_DATA         MyBitData;
  MY_EFI_UNION_DATA    MyUnionData;
  UINT8                QuestionXUefiKeywordRestStyle;
  UINT8                QuestionNonXUefiKeywordRestStyle;
} DRIVER_SAMPLE_CONFIGURATION;




typedef struct {
  UINT8     Field8;
  UINT16    Field16;
  UINT8     OrderedList[3];
  UINT16    SubmittedCallback;
} MY_EFI_VARSTORE_DATA;



// Data struct def in vfr
typedef struct {
  MY_BITS_DATA    BitsData;
  UINT32          EfiBitGrayoutTest : 5;
  UINT32          EfiBitNumeric     : 4;
  UINT32          EfiBitOneof       : 10;
  UINT32          EfiBitCheckbox    : 1;
  UINT32                            : 0;
} MY_EFI_BITS_VARSTORE_DATA;









#pragma pack()

#line 133 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 14 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"

































formset
>00000000: 0E A7 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 13 00 14 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000039: 5C 06 5B 00 00 00 
>00000045: 5C 06 5D 00 01 00 
  guid      = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} },
  title     = STRING_TOKEN(0x0013),
  help      = STRING_TOKEN(0x0014),
  classguid = { 0x93039971, 0x8545, 0x4b04, { 0xb4, 0x5e, 0x32, 0xeb, 0x83, 0x26, 0x4, 0xe } },













  varstore DRIVER_SAMPLE_CONFIGURATION,
>00000051: 24 22 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 34 12 DB 00 4D 79 49 66 72 4E 56 44 61 74 61 00 
    varid = 0x1234,
    name  = MyIfrNVData,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };




  efivarstore MY_EFI_VARSTORE_DATA,
>00000085: 26 23 01 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name  = MyEfiVar,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };




  efivarstore MY_EFI_BITS_VARSTORE_DATA,
>00000120: 26 26 02 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 42 69 74 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name  = MyEfiBitVar,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };

  efivarstore MY_EFI_UNION_DATA,
>00000158: 26 28 03 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 01 00 4D 79 45 66 69 55 6E 69 6F 6E 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name  = MyEfiUnionVar,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };




  namevaluevarstore MyNameValueVar,
>00000198: 25 14 04 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
    name = STRING_TOKEN(0x0092),
    name = STRING_TOKEN(0x0093),
    name = STRING_TOKEN(0x0094),
    guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };

  defaultstore MyStandardDefault,
    prompt      = STRING_TOKEN(0x005B),
    attribute   = 0x0000;

  defaultstore MyManufactureDefault,
    prompt      = STRING_TOKEN(0x005D),
    attribute   = 0x0001;




  form formid = 1,
>00000218: 01 86 01 00 15 00 
       title  = STRING_TOKEN(0x0015);

    subtitle text = STRING_TOKEN(0x001A);
>00000224: 02 87 1A 00 00 00 00 
>00000231: 29 02 

    subtitle text = STRING_TOKEN(0x001B);
>00000233: 02 87 1B 00 00 00 00 
>00000240: 29 02 




    text
>00000242: 03 08 1C 00 50 00 1D 00 
      help   = STRING_TOKEN(0x0050),
      text   = STRING_TOKEN(0x001C),
        text   = STRING_TOKEN(0x001D);




    text
      help   = STRING_TOKEN(0x0054),
      text   = STRING_TOKEN(0x0054),
      flags  = INTERACTIVE,
>00000250: 0C 8F 54 00 54 00 37 12 00 00 FF FF 04 00 00 
      key    = 0x1237;
>00000265: 29 02 

    text
      help   = STRING_TOKEN(0x0055),
      text   = STRING_TOKEN(0x0055),
      flags  = INTERACTIVE,
>00000267: 0C 8F 55 00 55 00 38 12 00 00 FF FF 04 00 00 
      key    = 0x1238;
>00000282: 29 02 

    text
      help   = STRING_TOKEN(0x0057),
      text   = STRING_TOKEN(0x0057),
      flags  = INTERACTIVE,
>00000284: 0C 8F 57 00 57 00 43 12 00 00 FF FF 04 00 00 
      key    = 0x1243;
>00000299: 29 02 

    text
      help   = STRING_TOKEN(0x0058),
      text   = STRING_TOKEN(0x0058),
      flags  = INTERACTIVE,
>00000301: 0C 8F 58 00 58 00 44 12 00 00 FF FF 04 00 00 
      key    = 0x1244;
>00000316: 29 02 



    oneof name = MyOneOf,
>00000318: 05 91 1F 00 26 00 01 00 34 12 5D 00 00 10 00 02 00 
      varid   = MyIfrNVData.SuppressGrayOutSomething,
      prompt  = STRING_TOKEN(0x001F),
      help    = STRING_TOKEN(0x0026),



      option text = STRING_TOKEN(0x002A), value = 0x0, flags = 0;
>00000335: 09 07 2A 00 00 00 00 
      option text = STRING_TOKEN(0x002B), value = 0x1, flags = 0;
>00000342: 09 07 2B 00 00 00 01 



      option text = STRING_TOKEN(0x002C), value = 0x2, flags = DEFAULT;
>00000349: 09 07 2C 00 10 00 02 
    endoneof;
>00000356: 29 02 

    oneof varid  = MyIfrNVData.BootOrderLarge,
>00000358: 05 91 1F 00 26 00 02 00 34 12 76 00 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x001F),
      help        = STRING_TOKEN(0x0026),
      default value = cond (pushthis == 0 ? 0 : cond ((questionref(MyOneOf) >> 0x4 & 0xF00) == 0x0 + 0x2 ? 0 : 1)),
>00000375: 5B 85 00 00 08 
>00000380: 5A 82 
>00000382: 58 82 
>00000384: 45 0A 00 00 00 00 00 00 00 00 
>00000394: 2F 02 
>00000396: 45 0A 00 00 00 00 00 00 00 00 
>00000406: 40 04 01 00 
>00000410: 45 0A 04 00 00 00 00 00 00 00 
>00000420: 39 02 
>00000422: 45 0A 00 0F 00 00 00 00 00 00 
>00000432: 35 02 
>00000434: 45 0A 00 00 00 00 00 00 00 00 
>00000444: 45 0A 02 00 00 00 00 00 00 00 
>00000454: 3A 02 
>00000456: 2F 02 
>00000458: 45 0A 00 00 00 00 00 00 00 00 
>00000468: 45 0A 01 00 00 00 00 00 00 00 
>00000478: 50 02 
>00000480: 50 02 
>00000482: 29 02 
>00000484: 29 02 
>00000486: 29 02 
      option text = STRING_TOKEN(0x002D), value = 0x0, flags = 0;
>00000488: 09 07 2D 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 0x1, flags = 0;
>00000495: 09 07 2E 00 00 00 01 
    endoneof;
>00000502: 29 02 

    grayoutif  ideqval MyIfrNVData.SuppressGrayOutSomething == 0x1;
>00000504: 19 82 
>00000506: 12 06 01 00 01 00 
      suppressif questionref(MyOneOf) == 0x0;
>00000512: 0A 82 
>00000514: 40 84 01 00 
>00000518: 45 0A 00 00 00 00 00 00 00 00 
>00000528: 2F 02 
>00000530: 29 02 

        checkbox varid   = MyIfrNVData.ChooseToActivateNuclearWeaponry,
>00000532: 06 8E 2F 00 30 00 03 00 34 12 5C 00 00 03 
                 prompt   = STRING_TOKEN(0x002F),
                 help     = STRING_TOKEN(0x0030),




                 flags    = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG,
                 default  = TRUE,
>00000546: 5B 06 00 00 00 01 
        endcheckbox;
>00000552: 29 02 
      endif;
>00000554: 29 02 
    endif;
>00000556: 29 02 








    suppressif ideqval MyIfrNVData.SuppressGrayOutSomething == 0x0;
>00000558: 0A 82 
>00000560: 12 06 01 00 00 00 





      label 0x2222;
>00000566: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 22 22 

      orderedlist
>00000587: 23 8F 8D 00 5A 00 04 00 34 12 66 00 10 08 00 
                varid       = MyIfrNVData.BootOrder,
                prompt      = STRING_TOKEN(0x008D),
                help        = STRING_TOKEN(0x005A),
                flags       = RESET_REQUIRED,
                option text = STRING_TOKEN(0x008F), value = 2, flags = 0;
>00000602: 09 08 8F 00 01 01 02 00 
                option text = STRING_TOKEN(0x008E), value = 1, flags = 0;
>00000610: 09 08 8E 00 01 01 01 00 
                option text = STRING_TOKEN(0x0090), value = 3, flags = 0;
>00000618: 09 08 90 00 01 01 03 00 
              suppressif ideqval MyIfrNVData.BootOrderLarge == 0;
>00000626: 0A 82 
>00000628: 12 06 02 00 00 00 
                option text = STRING_TOKEN(0x0091), value = 4, flags = 0;
>00000634: 09 08 91 00 01 01 04 00 
              endif;
>00000642: 29 02 
      endlist;
>00000644: 29 02 




      label 0x2223;
>00000646: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 

    endif;
>00000667: 29 02 

    disableif ideqval MyIfrNVData.SuppressGrayOutSomething == 0x2;
>00000669: 1E 82 
>00000671: 12 06 01 00 02 00 
      orderedlist
>00000677: 23 8F 52 00 50 00 05 00 34 12 5E 00 10 08 00 
        varid       = MyIfrNVData.OrderedList,
        prompt      = STRING_TOKEN(0x0052),
        help        = STRING_TOKEN(0x0050),
        flags       = RESET_REQUIRED,
        option text = STRING_TOKEN(0x0027), value = 3, flags = 0;
>00000692: 09 07 27 00 00 00 03 
        option text = STRING_TOKEN(0x0028), value = 2, flags = 0;
>00000699: 09 07 28 00 00 00 02 
        option text = STRING_TOKEN(0x0029), value = 1, flags = 0;
>00000706: 09 07 29 00 00 00 01 
        default     = {1,2,3},
>00000713: 5B 08 00 00 0B 01 02 03 
      endlist;
>00000721: 29 02 
    endif;
>00000723: 29 02 

    label 100;
>00000725: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 64 00 




    goto 0x1234,
>00000746: 0F 0F 41 00 51 00 34 12 00 00 FF FF 04 34 12 
      prompt  = STRING_TOKEN(0x0041),
      help    = STRING_TOKEN(0x0051),
      flags   = INTERACTIVE,
      key     = 0x1234;

    goto 0x1234,
>00000761: 0F 0F 42 00 51 00 35 12 00 00 FF FF 04 34 12 
      prompt  = STRING_TOKEN(0x0042),
      help    = STRING_TOKEN(0x0051),
      flags   = INTERACTIVE,
      key     = 0x1235;

    oneof varid  = MyIfrNVData.TestLateCheck,
>00000776: 05 91 52 00 26 00 06 00 34 12 59 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0052),
      help        = STRING_TOKEN(0x0026),
      flags       = RESET_REQUIRED,
      option text = STRING_TOKEN(0x0027), value = 0, flags = 0;
>00000793: 09 07 27 00 00 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = DEFAULT;
>00000800: 09 07 28 00 10 00 01 
      warningif prompt = STRING_TOKEN(0x00AC), timeout = 5,
>00000807: 63 85 AC 00 05 
        ideqval MyIfrNVData.TestLateCheck == 0
>00000812: 12 06 06 00 00 00 
      endif;
>00000818: 29 02 

    endoneof;
>00000820: 29 02 

    oneof varid  = MyIfrNVData.TestLateCheck2,
>00000822: 05 91 53 00 26 00 07 00 34 12 5A 00 10 10 00 01 00 
      prompt      = STRING_TOKEN(0x0053),
      help        = STRING_TOKEN(0x0026),
      flags       = RESET_REQUIRED,
      option text = STRING_TOKEN(0x0027), value = 0, flags = DEFAULT;
>00000839: 09 07 27 00 10 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = 0;
>00000846: 09 07 28 00 00 00 01 

      inconsistentif prompt = STRING_TOKEN(0x0047),
>00000853: 11 84 47 00 
        ideqid MyIfrNVData.TestLateCheck == MyIfrNVData.TestLateCheck2
>00000857: 13 06 06 00 07 00 
      endif;
>00000863: 29 02 

    endoneof;
>00000865: 29 02 

    oneof varid  = MyIfrNVData.QuestionAboutTreeHugging,
>00000867: 05 91 20 00 26 00 08 00 34 12 5B 00 10 10 00 03 00 
      prompt      = STRING_TOKEN(0x0020),
      help        = STRING_TOKEN(0x0026),
      flags       = RESET_REQUIRED,
      option text = STRING_TOKEN(0x0027), value = 0, flags = 0;
>00000884: 09 07 27 00 00 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = DEFAULT;
>00000891: 09 07 28 00 10 00 01 
      option text = STRING_TOKEN(0x0029), value = 3, flags = 0;
>00000898: 09 07 29 00 00 00 03 
    endoneof;
>00000905: 29 02 







    oneof varid  = MyIfrNVData.QuestionXUefiKeywordRestStyle,
>00000907: 05 91 22 00 23 00 09 00 34 12 D9 00 30 10 00 03 00 
      prompt      = STRING_TOKEN(0x0022),
      help        = STRING_TOKEN(0x0023),
      flags       = RESET_REQUIRED | REST_STYLE,
      option text = STRING_TOKEN(0x0027), value = 0, flags = 0;
>00000924: 09 07 27 00 00 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = DEFAULT;
>00000931: 09 07 28 00 10 00 01 
      option text = STRING_TOKEN(0x0029), value = 3, flags = 0;
>00000938: 09 07 29 00 00 00 03 
    endoneof;
>00000945: 29 02 









    numeric varid  = MyIfrNVData.QuestionNonXUefiKeywordRestStyle,
>00000947: 07 91 24 00 25 00 0A 00 34 12 DA 00 30 10 00 F0 00 
      prompt       = STRING_TOKEN(0x0024),
      help         = STRING_TOKEN(0x0025),
      flags        = RESET_REQUIRED | REST_STYLE,
      minimum      = 0,
      maximum      = 0xf0,
      step         = 0,

      default      = 0,
>00000964: 5B 06 00 00 00 00 

    endnumeric;
>00000970: 29 02 




    string    varid    = MyIfrNVData.MyStringData,
>00000972: 1C 90 48 00 49 00 36 12 34 12 00 00 04 06 28 00 
              prompt   = STRING_TOKEN(0x0048),
              help     = STRING_TOKEN(0x0049),
              flags    = INTERACTIVE,
              key      = 0x1236,
              minsize  = 6,
              maxsize  = 40,
              inconsistentif prompt = STRING_TOKEN(0x0063),
>00000988: 11 84 63 00 
                pushthis != stringref(STRING_TOKEN(0x0062))
>00000992: 58 82 
>00000994: 4E 04 62 00 
>00000998: 30 02 
>00001000: 29 02 
              endif;
>00001002: 29 02 
    endstring;
>00001004: 29 02 




    numeric varid   = MyIfrNVData.HowOldAreYouInYearsManual,
>00001006: 07 91 32 00 35 00 0B 00 34 12 52 00 01 10 00 F0 00 
            prompt  = STRING_TOKEN(0x0032),
            help    = STRING_TOKEN(0x0035),
            flags   = READ_ONLY,
            minimum = 0,
            maximum = 0xf0,
            step    = 0,

            default = 21,
>00001023: 5B 06 00 00 00 15 


    endnumeric;
>00001029: 29 02 

    numeric varid   = MyIfrNVData.HowOldAreYouInYearsManual,
>00001031: 07 91 33 00 35 00 0C 00 34 12 52 00 00 10 00 F0 00 
            prompt  = STRING_TOKEN(0x0033),
            help    = STRING_TOKEN(0x0035),
            minimum = 0,
            maximum = 0xf0,
            step    = 0,
            default value = questionrefval(devicepath = STRING_TOKEN (0x006D), guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} }, 0x1111),
>00001048: 5B 85 00 00 08 
>00001053: 5A 82 
>00001055: 45 8A 11 11 00 00 00 00 00 00 
>00001065: 51 14 6D 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
>00001085: 29 02 
>00001087: 29 02 
>00001089: 29 02 

            inconsistentif prompt = STRING_TOKEN(0x0047),
>00001091: 11 84 47 00 
              ideqval MyIfrNVData.HowOldAreYouInYearsManual == 99
>00001095: 12 86 0C 00 63 00 
              OR
              ideqid  MyIfrNVData.HowOldAreYouInYearsManual == MyEfiVar.Field8
>00001101: 13 06 0C 00 11 11 
>00001107: 16 03 00 
>00001127: 29 02 
              OR
              ideqvallist MyIfrNVData.HowOldAreYouInYearsManual == 1 3 5 7
>00001110: 14 0E 0C 00 04 00 01 00 03 00 05 00 07 00 
>00001124: 16 03 00 
            endif;
>00001129: 29 02 

    endnumeric;
>00001131: 29 02 

    numeric varid   = MyEfiVar.Field8,
>00001133: 07 91 34 00 36 00 11 11 01 00 00 00 04 30 00 FA 00 
            questionid  = 0x1111,
            prompt  = STRING_TOKEN(0x0034),
            help    = STRING_TOKEN(0x0036),
            flags   = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 0,
            maximum = 250,
            default = 18, defaultstore = MyStandardDefault,
>00001150: 5B 06 00 00 00 12 
            default = 19, defaultstore = MyManufactureDefault,
>00001156: 5B 06 01 00 00 13 

    endnumeric;
>00001162: 29 02 




    numeric varid   = MyNameValueVar[0],
>00001164: 07 91 92 00 5F 00 0D 00 04 00 92 00 00 10 00 FF 00 
            prompt  = STRING_TOKEN(0x0092),
            help    = STRING_TOKEN(0x005F),




            flags   = NUMERIC_SIZE_1,
            minimum = 0,
            maximum = 0xff,
            step    = 0,
            locked,
>00001190: 0B 02 
            default = 16, defaultstore = MyStandardDefault,
>00001192: 5B 06 00 00 00 10 
            default = 17, defaultstore = MyManufactureDefault,
>00001198: 5B 06 01 00 00 11 
    endnumeric;
>00001204: 29 02 

    numeric varid   = MyNameValueVar[1],
>00001206: 07 94 93 00 60 00 0E 00 04 00 93 00 00 11 00 00 FF FF 00 00 
            prompt  = STRING_TOKEN(0x0093),
            help    = STRING_TOKEN(0x0060),
            flags   = NUMERIC_SIZE_2,
            minimum = 0,
            maximum = 0xffff,
            step    = 0,
            default = 18, defaultstore = MyStandardDefault,
>00001232: 5B 07 00 00 01 12 00 
            default = 19, defaultstore = MyManufactureDefault,
>00001239: 5B 07 01 00 01 13 00 
    endnumeric;
>00001246: 29 02 




    string    varid    = MyNameValueVar[2],
>00001248: 1C 90 94 00 61 00 0F 00 04 00 94 00 00 02 14 00 
              prompt   = STRING_TOKEN(0x0094),
              help     = STRING_TOKEN(0x0061),
              minsize  = 2,
              maxsize  = 0x14,
    endstring;
>00001264: 29 02 

    oneof varid   = MyEfiVar.Field16,
>00001266: 05 94 1F 00 1E 00 10 00 01 00 01 00 00 11 00 00 01 00 00 00 
      prompt      = STRING_TOKEN(0x001F),
      help        = STRING_TOKEN(0x001E),
      option text = STRING_TOKEN(0x002D), value = 0x0, flags = 0;
>00001286: 09 08 2D 00 01 01 00 00 
      option text = STRING_TOKEN(0x002E), value = 0x1, flags = DEFAULT;
>00001294: 09 08 2E 00 11 01 01 00 
    endoneof;
>00001302: 29 02 

    label 0x01;
>00001304: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 00 
    label 0x1000;
>00001325: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 10 

    grayoutif  ideqval MyIfrNVData.HowOldAreYouInYearsManual == 23 AND ideqval MyIfrNVData.SuppressGrayOutSomething == 0x1;
>00001346: 19 82 
>00001348: 12 86 0C 00 17 00 
>00001354: 12 06 01 00 01 00 
>00001360: 15 02 
>00001362: 29 02 
      numeric varid   = MyIfrNVData.HowOldAreYouInYears,
>00001364: 07 91 31 00 37 00 11 00 34 12 55 00 00 10 00 F3 01 
              prompt  = STRING_TOKEN(0x0031),
              help    = STRING_TOKEN(0x0037),
              minimum = 0,
              maximum = 243,
              step    = 1,
              default = 18, defaultstore = MyStandardDefault,
>00001381: 5B 06 00 00 00 12 
              default = 19, defaultstore = MyManufactureDefault,
>00001387: 5B 06 01 00 00 13 

      endnumeric;
>00001393: 29 02 
    endif;
>00001395: 29 02 

    numeric varid   = MyIfrNVData.GetDefaultValueFromAccess,
>00001397: 07 91 69 00 6A 00 39 12 34 12 C6 00 04 30 00 FF 01 
            questionid = 0x1239,
            prompt  = STRING_TOKEN(0x0069),
            help    = STRING_TOKEN(0x006A),
            flags   = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 0,
            maximum = 255,
            step    = 1,
            default = 18,
>00001414: 5B 06 00 00 00 12 
    endnumeric;
>00001420: 29 02 

    numeric varid   = MyIfrNVData.GetDefaultValueFromCallBack,
>00001422: 07 91 67 00 68 00 40 12 34 12 C5 00 04 30 00 FF 01 
            questionid = 0x1240,
            prompt  = STRING_TOKEN(0x0067),
            help    = STRING_TOKEN(0x0068),
            flags   = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 0,
            maximum = 255,
            step    = 1,
            default = 18,
>00001439: 5B 06 00 00 00 12 
    endnumeric;
>00001445: 29 02 

    orderedlist
>00001447: 23 8F 67 00 68 00 52 12 34 12 CC 00 04 03 00 
        varid       = MyIfrNVData.GetDefaultValueFromCallBackForOrderedList,
        questionid  = 0x1252,
        prompt      = STRING_TOKEN(0x0067),
        help        = STRING_TOKEN(0x0068),
        flags       = INTERACTIVE,
        option text = STRING_TOKEN(0x0027), value = 1, flags = 0;
>00001462: 09 07 27 00 00 00 01 
        option text = STRING_TOKEN(0x0028), value = 2, flags = 0;
>00001469: 09 07 28 00 00 00 02 
        option text = STRING_TOKEN(0x0029), value = 3, flags = 0;
>00001476: 09 07 29 00 00 00 03 
    endlist;
>00001483: 29 02 

    resetbutton
>00001485: 0D 88 5B 00 5C 00 00 00 
      defaultstore = MyStandardDefault,
      prompt   = STRING_TOKEN(0x005B),
      help     = STRING_TOKEN(0x005C),
    endresetbutton;
>00001493: 29 02 

    resetbutton
>00001495: 0D 88 5D 00 5E 00 01 00 
      defaultstore = MyManufactureDefault,
      prompt   = STRING_TOKEN(0x005D),
      help     = STRING_TOKEN(0x005E),
    endresetbutton;
>00001503: 29 02 




    grayoutif NOT security ({ 0x85b75607, 0xf7ce, 0x471e, { 0xb7, 0xe4, 0x2a, 0xea, 0x5f, 0x72, 0x32, 0xee } });
>00001505: 19 82 
>00001507: 60 92 07 56 B7 85 CE F7 1E 47 B7 E4 2A EA 5F 72 32 EE 
>00001525: 17 02 
>00001527: 29 02 
      text
>00001529: 03 08 38 00 39 00 00 00 
        help = STRING_TOKEN(0x0039),
        text = STRING_TOKEN(0x0038);
    endif;
>00001537: 29 02 

    numeric varid   = MyEfiVar.SubmittedCallback,
>00001539: 07 94 6E 00 6F 00 50 12 01 00 06 00 04 11 00 00 FF 00 00 00 
            questionid = 0x1250,
            prompt  = STRING_TOKEN(0x006E),
            help    = STRING_TOKEN(0x006F),
            flags   = INTERACTIVE,
            minimum = 0,
            maximum = 255,
            default = 18,
>00001559: 5B 07 00 00 01 12 00 
    endnumeric;
>00001566: 29 02 

    text
      help  = STRING_TOKEN(0x0071),
      text  = STRING_TOKEN(0x0070),
      flags = INTERACTIVE,
>00001568: 0C 8F 70 00 71 00 30 13 00 00 FF FF 04 00 00 
      key   = 0x1330;
>00001583: 29 02 

    goto 2,
>00001585: 0F 0F 3B 00 51 00 12 00 00 00 FF FF 00 02 00 
      prompt = STRING_TOKEN(0x003B),
      help   = STRING_TOKEN(0x0051);

    goto 3,
>00001600: 0F 0F 3C 00 51 00 13 00 00 00 FF FF 00 03 00 
      prompt = STRING_TOKEN(0x003C),
      help   = STRING_TOKEN(0x0051);

    goto 4,
>00001615: 0F 0F 3D 00 51 00 14 00 00 00 FF FF 00 04 00 
      prompt = STRING_TOKEN(0x003D),
      help   = STRING_TOKEN(0x0051);

    goto 5,
>00001630: 0F 0F 3F 00 40 00 15 00 00 00 FF FF 00 05 00 
      prompt = STRING_TOKEN(0x003F),
      help   = STRING_TOKEN(0x0040);

    goto 6,
>00001645: 0F 0F 3E 00 51 00 16 00 00 00 FF FF 00 06 00 
      prompt = STRING_TOKEN(0x003E),
      help   = STRING_TOKEN(0x0051);

    goto
>00001660: 0F 21 6B 00 6C 00 17 00 00 00 FF FF 00 01 00 01 00 70 64 F5 B3 41 61 21 46 8F 19 70 4E 57 7A A9 E8 
      formsetguid = { 0xb3f56470, 0x6141, 0x4621, {0x8f, 0x19, 0x70, 0x4e, 0x57, 0x7a, 0xa9, 0xe8} },
      formid  = 0x1,
      question = 0x1,
      prompt  = STRING_TOKEN(0x006B),
      help    = STRING_TOKEN(0x006C);

    guidop
>00001693: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 21 21 21 21 00 00 00 00 
      guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} },
      datatype = MY_EFI_VARSTORE_DATA,
        data.Field8  = 0x21,
        data.Field16 = 0x2121,
        data.OrderedList[0] = 0x21,
    endguidop;
>00001719: 29 02 

     goto 7,
>00001721: 0F 0F 74 00 75 00 18 00 00 00 FF FF 00 07 00 
      prompt = STRING_TOKEN(0x0074),
      help   = STRING_TOKEN(0x0075);

  endform;
>00001736: 29 02 

  suppressif ideqval MyIfrNVData.BootOrderLarge == 0;
>00001740: 12 06 02 00 00 00 
    form formid = 2,
>00001746: 01 86 02 00 16 00 
      title = STRING_TOKEN(0x0016);

      date
>00001752: 1A 8E 4C 00 4D 00 19 00 00 00 FF FF 00 10 
        name    = Date,
        prompt  = STRING_TOKEN(0x004C),
        help    = STRING_TOKEN(0x004D),
        flags   = STORAGE_TIME,
        default = 2004/1/1,
>00001766: 5B 09 00 00 06 D4 07 01 01 

        inconsistentif prompt = STRING_TOKEN(0x0047),
>00001775: 11 84 47 00 
          ideqval Date.Day == 31
>00001779: 40 84 19 00 
>00001783: 44 06 00 00 00 FF 
>00001789: 35 02 
>00001791: 42 03 18 
>00001794: 39 02 
>00001796: 42 03 1F 
>00001799: 2F 02 
          AND
          ideqvallist Date.Month == 2 4 6 9 11
>00001801: 40 04 19 00 
>00001805: 44 06 00 00 FF 00 
>00001811: 35 02 
>00001813: 42 03 10 
>00001816: 39 02 
>00001818: 42 03 02 
>00001821: 2F 02 
>00001823: 40 04 19 00 
>00001827: 44 06 00 00 FF 00 
>00001833: 35 02 
>00001835: 42 03 10 
>00001838: 39 02 
>00001840: 42 03 04 
>00001843: 2F 02 
>00001845: 16 03 00 
>00001848: 40 04 19 00 
>00001852: 44 06 00 00 FF 00 
>00001858: 35 02 
>00001860: 42 03 10 
>00001863: 39 02 
>00001865: 42 03 06 
>00001868: 2F 02 
>00001870: 16 03 00 
>00001873: 40 04 19 00 
>00001877: 44 06 00 00 FF 00 
>00001883: 35 02 
>00001885: 42 03 10 
>00001888: 39 02 
>00001890: 42 03 09 
>00001893: 2F 02 
>00001895: 16 03 00 
>00001898: 40 04 19 00 
>00001902: 44 06 00 00 FF 00 
>00001908: 35 02 
>00001910: 42 03 10 
>00001913: 39 02 
>00001915: 42 03 0B 
>00001918: 2F 02 
>00001920: 16 03 00 
>00001923: 15 02 
>00001925: 29 02 
        endif;
>00001927: 29 02 




        inconsistentif prompt = STRING_TOKEN(0x0047),
>00001929: 11 84 47 00 
          ideqval Date.Day == 30
>00001933: 40 84 19 00 
>00001937: 44 06 00 00 00 FF 
>00001943: 35 02 
>00001945: 42 03 18 
>00001948: 39 02 
>00001950: 42 03 1E 
>00001953: 2F 02 
          AND
          ideqval Date.Month == 2
>00001955: 40 04 19 00 
>00001959: 44 06 00 00 FF 00 
>00001965: 35 02 
>00001967: 42 03 10 
>00001970: 39 02 
>00001972: 42 03 02 
>00001975: 2F 02 
>00001977: 15 02 
>00001979: 29 02 
        endif;
>00001981: 29 02 




        inconsistentif prompt = STRING_TOKEN(0x0047),
>00001983: 11 84 47 00 
          ideqval Date.Day == 0x1D
>00001987: 40 84 19 00 
>00001991: 44 06 00 00 00 FF 
>00001997: 35 02 
>00001999: 42 03 18 
>00002002: 39 02 
>00002004: 42 03 1D 
>00002007: 2F 02 
          AND
          ideqval Date.Month == 2
>00002009: 40 04 19 00 
>00002013: 44 06 00 00 FF 00 
>00002019: 35 02 
>00002021: 42 03 10 
>00002024: 39 02 
>00002026: 42 03 02 
>00002029: 2F 02 
>00002031: 15 02 
          AND
          NOT
          ideqvallist Date.Year == 2004 2008 20012 20016 2020 2024 2028 2032 2036
>00002033: 40 04 19 00 
>00002037: 44 06 FF FF 00 00 
>00002043: 35 02 
>00002045: 42 03 00 
>00002048: 39 02 
>00002050: 43 04 D4 07 
>00002054: 2F 02 
>00002056: 40 04 19 00 
>00002060: 44 06 FF FF 00 00 
>00002066: 35 02 
>00002068: 42 03 00 
>00002071: 39 02 
>00002073: 43 04 D8 07 
>00002077: 2F 02 
>00002079: 16 03 00 
>00002082: 40 04 19 00 
>00002086: 44 06 FF FF 00 00 
>00002092: 35 02 
>00002094: 42 03 00 
>00002097: 39 02 
>00002099: 43 04 2C 4E 
>00002103: 2F 02 
>00002105: 16 03 00 
>00002108: 40 04 19 00 
>00002112: 44 06 FF FF 00 00 
>00002118: 35 02 
>00002120: 42 03 00 
>00002123: 39 02 
>00002125: 43 04 30 4E 
>00002129: 2F 02 
>00002131: 16 03 00 
>00002134: 40 04 19 00 
>00002138: 44 06 FF FF 00 00 
>00002144: 35 02 
>00002146: 42 03 00 
>00002149: 39 02 
>00002151: 43 04 E4 07 
>00002155: 2F 02 
>00002157: 16 03 00 
>00002160: 40 04 19 00 
>00002164: 44 06 FF FF 00 00 
>00002170: 35 02 
>00002172: 42 03 00 
>00002175: 39 02 
>00002177: 43 04 E8 07 
>00002181: 2F 02 
>00002183: 16 03 00 
>00002186: 40 04 19 00 
>00002190: 44 06 FF FF 00 00 
>00002196: 35 02 
>00002198: 42 03 00 
>00002201: 39 02 
>00002203: 43 04 EC 07 
>00002207: 2F 02 
>00002209: 16 03 00 
>00002212: 40 04 19 00 
>00002216: 44 06 FF FF 00 00 
>00002222: 35 02 
>00002224: 42 03 00 
>00002227: 39 02 
>00002229: 43 04 F0 07 
>00002233: 2F 02 
>00002235: 16 03 00 
>00002238: 40 04 19 00 
>00002242: 44 06 FF FF 00 00 
>00002248: 35 02 
>00002250: 42 03 00 
>00002253: 39 02 
>00002255: 43 04 F4 07 
>00002259: 2F 02 
>00002264: 17 02 
>00002266: 15 02 
>00002261: 16 03 00 
>00002268: 29 02 
        endif;
>00002270: 29 02 

      enddate;
>00002272: 29 02 

      text
        help   = STRING_TOKEN(0x0059),
        text   = STRING_TOKEN(0x0059),
        flags  = INTERACTIVE,
>00002274: 0C 8F 59 00 59 00 41 12 00 00 FF FF 04 00 00 
        key    = 0x1241;
>00002289: 29 02 

      text
        help   = STRING_TOKEN(0x0056),
        text   = STRING_TOKEN(0x0056),
        flags  = INTERACTIVE,
>00002291: 0C 8F 56 00 56 00 42 12 00 00 FF FF 04 00 00 
        key    = 0x1242;
>00002306: 29 02 

      time
>00002308: 1B 8E 4E 00 4F 00 1A 00 00 00 FF FF 00 10 
        prompt  = STRING_TOKEN(0x004E),
        help    = STRING_TOKEN(0x004F),
        flags   = STORAGE_TIME,
      endtime;
>00002322: 29 02 

      time
>00002324: 1B 8E 4E 00 4E 00 1B 00 34 12 C7 00 00 04 
            name    = MyTime,
            varid   = MyIfrNVData.Time,
            prompt  = STRING_TOKEN(0x004E),
            help    = STRING_TOKEN(0x004E),
            flags   = STORAGE_NORMAL | SECOND_SUPPRESS,
            default = 15:33:33,
>00002338: 5B 08 00 00 05 0F 21 21 
      endtime;
>00002346: 29 02 

      checkbox varid   = MyIfrNVData.ChooseToActivateNuclearWeaponry,
>00002348: 06 8E 2F 00 30 00 1C 00 34 12 5C 00 00 01 
              prompt   = STRING_TOKEN(0x002F),
              help     = STRING_TOKEN(0x0030),
              flags    = CHECKBOX_DEFAULT,
      endcheckbox;
>00002362: 29 02 

      text
>00002364: 03 08 4A 00 50 00 00 00 
        help = STRING_TOKEN(0x0050),
        text = STRING_TOKEN(0x004A);

      text
>00002372: 03 08 4A 00 50 00 4B 00 
        help   = STRING_TOKEN(0x0050),
        text   = STRING_TOKEN(0x004A),
        text   = STRING_TOKEN(0x004B);

      goto 1,
>00002380: 0F 0F 3A 00 51 00 1D 00 00 00 FF FF 00 01 00 
        prompt = STRING_TOKEN(0x003A),
        help   = STRING_TOKEN(0x0051);

    goto
>00002395: 0F 8D 43 00 45 00 48 12 34 12 7F 00 04 
      varid   = MyIfrNVData.RefData,
      prompt  = STRING_TOKEN(0x0043),
      help    = STRING_TOKEN(0x0045),
      flags   = INTERACTIVE,
      key     = 0x1248,

>00002435: 29 02 


      default = 0;0;{ 0x0, 0x0, 0x0, {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0} };STRING_TOKEN(0x005A),
>00002408: 5B 1B 00 00 0C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 5A 00 
    ;

    goto
>00002437: 0F 0D 44 00 46 00 49 12 00 00 FF FF 04 
      prompt  = STRING_TOKEN(0x0044),
      help    = STRING_TOKEN(0x0046),
      flags   = INTERACTIVE,
      key     = 0x1249;

    endform;
>00002450: 29 02 
  endif;
>00002452: 29 02 

  form formid = 3, title = STRING_TOKEN(0x0017);
>00002454: 01 86 03 00 17 00 

    suppressif  ideqval MyEfiVar.Field8 == 111;
>00002460: 0A 82 
>00002462: 12 06 11 11 6F 00 
      text
>00002468: 03 08 4A 00 50 00 00 00 
        help = STRING_TOKEN(0x0050),
        text = STRING_TOKEN(0x004A);
    endif;
>00002476: 29 02 

    goto 1,
>00002478: 0F 0F 3A 00 51 00 1E 00 00 00 FF FF 00 01 00 
      prompt = STRING_TOKEN(0x003A),
      help   = STRING_TOKEN(0x0051);

    numeric varid   = MyIfrNVData.DynamicRefresh,
>00002493: 07 91 33 00 35 00 78 56 34 12 77 00 04 10 00 FF 00 
            prompt  = STRING_TOKEN(0x0033),
            help    = STRING_TOKEN(0x0035),
            flags   = INTERACTIVE,
            key     = 0x5678,
            minimum = 0,
            maximum = 0xff,
            step    = 0,
            default = 0,
>00002510: 5B 06 00 00 00 00 
            refresh interval = 3
>00002516: 1D 03 03 
    endnumeric;
>00002519: 29 02 

    grayoutif  match2 (stringref(STRING_TOKEN(0x00B0)), stringref(STRING_TOKEN(0x00AF)), { 0x63E60A51, 0x497D, 0xD427, {0xC4, 0xA5, 0xB8, 0xAB, 0xDC, 0x3A, 0xAE, 0xB6 }});
>00002521: 19 82 
>00002523: 4E 84 B0 00 
>00002527: 4E 04 AF 00 
>00002531: 64 12 51 0A E6 63 7D 49 27 D4 C4 A5 B8 AB DC 3A AE B6 
>00002549: 29 02 
      numeric
>00002551: 07 91 AD 00 AE 00 1F 00 34 12 CB 00 00 10 00 F3 00 
        varid   = MyIfrNVData.Match2,
        prompt  = STRING_TOKEN(0x00AD),
        help    = STRING_TOKEN(0x00AE),
        minimum = 0,
        maximum = 243,
      endnumeric;
>00002568: 29 02 
    endif;
>00002570: 29 02 

    label 0x2234;
>00002572: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 22 
    label 0x2223;
>00002593: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 

  endform;
>00002614: 29 02 

  formmap formid = 4,
>00002616: 5D A8 04 00 95 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 96 00 EC F4 D2 3B 24 E5 E4 46 A9 D8 51 01 17 42 55 62 
    maptitle = STRING_TOKEN(0x0095);
    mapguid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };
    maptitle = STRING_TOKEN(0x0096);
    mapguid  = { 0x3bd2f4ec, 0xe524, 0x46e4, { 0xa9, 0xd8, 0x51, 0x1, 0x17, 0x42, 0x55, 0x62 } };

    oneof varid = MyIfrNVData.SerialPortNo,
>00002656: 05 91 97 00 26 00 20 00 34 12 C0 00 00 10 00 04 00 
      prompt  = STRING_TOKEN(0x0097),
      help    = STRING_TOKEN(0x0026),

      read    cond (get(MyIfrNVData.SerialPortStatus) != 0 ? 0 : cond ((get(MyIfrNVData.SerialPortIo) & 0xF00) >> 0x8 == get(MyIfrNVData.SerialPortIrq) - 1 ? UNDEFINED : map (get(MyIfrNVData.SerialPortIo) : 0x3f8,1; 0x2F8,2; 0x3E8,3; 0x2E8,4;)));
>00002673: 2D 02 
>00002675: 2B 87 34 12 C1 00 00 
>00002682: 45 0A 00 00 00 00 00 00 00 00 
>00002692: 30 02 
>00002694: 45 0A 00 00 00 00 00 00 00 00 
>00002704: 2B 07 34 12 C2 00 01 
>00002711: 45 0A 00 0F 00 00 00 00 00 00 
>00002721: 35 02 
>00002723: 45 0A 08 00 00 00 00 00 00 00 
>00002733: 39 02 
>00002735: 2B 07 34 12 C4 00 00 
>00002742: 45 0A 01 00 00 00 00 00 00 00 
>00002752: 3B 02 
>00002754: 2F 02 
>00002756: 55 02 
>00002758: 2B 07 34 12 C2 00 01 
>00002765: 22 82 
>00002767: 45 0A F8 03 00 00 00 00 00 00 
>00002777: 45 0A 01 00 00 00 00 00 00 00 
>00002787: 45 0A F8 02 00 00 00 00 00 00 
>00002797: 45 0A 02 00 00 00 00 00 00 00 
>00002807: 45 0A E8 03 00 00 00 00 00 00 
>00002817: 45 0A 03 00 00 00 00 00 00 00 
>00002827: 45 0A E8 02 00 00 00 00 00 00 
>00002837: 45 0A 04 00 00 00 00 00 00 00 
>00002847: 29 02 
>00002849: 50 02 
>00002851: 50 02 
>00002853: 29 02 
      write   set(MyIfrNVData.SerialPortStatus, pushthis != 0) AND set(MyIfrNVData.SerialPortIo, map (pushthis : 1,0x3F8; 2,0x2F8; 3,0x3E8; 4,0x2E8;)) AND set (MyIfrNVData.SerialPortIrq, map (pushthis: 1,4; 2,3; 3,4; 4,3;));
>00002855: 2E 02 
>00002857: 58 82 
>00002859: 45 0A 00 00 00 00 00 00 00 00 
>00002869: 30 02 
>00002871: 2C 07 34 12 C1 00 00 
>00002878: 58 02 
>00002880: 22 82 
>00002882: 45 0A 01 00 00 00 00 00 00 00 
>00002892: 45 0A F8 03 00 00 00 00 00 00 
>00002902: 45 0A 02 00 00 00 00 00 00 00 
>00002912: 45 0A F8 02 00 00 00 00 00 00 
>00002922: 45 0A 03 00 00 00 00 00 00 00 
>00002932: 45 0A E8 03 00 00 00 00 00 00 
>00002942: 45 0A 04 00 00 00 00 00 00 00 
>00002952: 45 0A E8 02 00 00 00 00 00 00 
>00002962: 29 02 
>00002964: 2C 07 34 12 C2 00 01 
>00002971: 15 02 
>00002973: 58 02 
>00002975: 22 82 
>00002977: 45 0A 01 00 00 00 00 00 00 00 
>00002987: 45 0A 04 00 00 00 00 00 00 00 
>00002997: 45 0A 02 00 00 00 00 00 00 00 
>00003007: 45 0A 03 00 00 00 00 00 00 00 
>00003017: 45 0A 03 00 00 00 00 00 00 00 
>00003027: 45 0A 04 00 00 00 00 00 00 00 
>00003037: 45 0A 04 00 00 00 00 00 00 00 
>00003047: 45 0A 03 00 00 00 00 00 00 00 
>00003057: 29 02 
>00003059: 2C 07 34 12 C4 00 00 
>00003066: 15 02 
>00003068: 29 02 

      option text = STRING_TOKEN(0x0098), value = 0x0, flags = DEFAULT;
>00003070: 09 07 98 00 10 00 00 
      option text = STRING_TOKEN(0x0099), value = 0x1, flags = 0;
>00003077: 09 07 99 00 00 00 01 
      option text = STRING_TOKEN(0x009A), value = 0x2, flags = 0;
>00003084: 09 07 9A 00 00 00 02 
      option text = STRING_TOKEN(0x009B), value = 0x3, flags = 0;
>00003091: 09 07 9B 00 00 00 03 
      option text = STRING_TOKEN(0x009C), value = 0x4, flags = 0;
>00003098: 09 07 9C 00 00 00 04 
    endoneof;
>00003105: 29 02 

    grayoutif TRUE;
>00003107: 19 82 
>00003109: 46 02 
      checkbox varid = MyIfrNVData.SerialPortStatus,
>00003111: 06 8E 9D 00 30 00 21 00 34 12 C1 00 00 00 
        prompt   = STRING_TOKEN(0x009D),
        help     = STRING_TOKEN(0x0030),
      endcheckbox;
>00003125: 29 02 
    endif;
>00003127: 29 02 

    grayoutif TRUE;
>00003129: 19 82 
>00003131: 46 02 
      suppressif ideqval MyIfrNVData.SerialPortStatus == 0;
>00003133: 0A 82 
>00003135: 12 06 21 00 00 00 
        oneof varid = MyIfrNVData.SerialPortIo,
>00003141: 05 94 9E 00 26 00 22 00 34 12 C2 00 00 11 E8 02 F8 03 00 00 
          prompt  = STRING_TOKEN(0x009E),
          help    = STRING_TOKEN(0x0026),

          option text = STRING_TOKEN(0x00A0), value = 0x3F8, flags = DEFAULT;
>00003161: 09 08 A0 00 11 01 F8 03 
          option text = STRING_TOKEN(0x00A1), value = 0x2F8, flags = 0;
>00003169: 09 08 A1 00 01 01 F8 02 
          option text = STRING_TOKEN(0x00A2), value = 0x3E8, flags = 0;
>00003177: 09 08 A2 00 01 01 E8 03 
          option text = STRING_TOKEN(0x00A3), value = 0x2E8, flags = 0;
>00003185: 09 08 A3 00 01 01 E8 02 
        endoneof;
>00003193: 29 02 
      endif;
>00003195: 29 02 
    endif;
>00003197: 29 02 

    grayoutif TRUE;
>00003199: 19 82 
>00003201: 46 02 
      suppressif ideqval MyIfrNVData.SerialPortStatus == 0;
>00003203: 0A 82 
>00003205: 12 06 21 00 00 00 
        oneof varid = MyIfrNVData.SerialPortIrq,
>00003211: 05 91 9F 00 26 00 23 00 34 12 C4 00 00 10 03 04 00 
          prompt  = STRING_TOKEN(0x009F),
          help    = STRING_TOKEN(0x0026),

          option text = STRING_TOKEN(0x00A4), value = 0x4, flags = DEFAULT;
>00003228: 09 07 A4 00 10 00 04 
          option text = STRING_TOKEN(0x00A5), value = 0x3, flags = 0;
>00003235: 09 07 A5 00 00 00 03 
        endoneof;
>00003242: 29 02 
      endif;
>00003244: 29 02 
    endif;
>00003246: 29 02 

    goto 1,
>00003248: 0F 0F 3A 00 51 00 24 00 00 00 FF FF 00 01 00 
      prompt = STRING_TOKEN(0x003A),
      help   = STRING_TOKEN(0x0051);

  endform;
>00003263: 29 02 

  form formid = 5,
>00003265: 01 86 05 00 66 00 
       title = STRING_TOKEN(0x0066);



    modal;
>00003271: 61 02 
    text
      help   = STRING_TOKEN(0x0054),
      text   = STRING_TOKEN(0x0054),
      flags  = INTERACTIVE,
>00003273: 0C 8F 54 00 54 00 45 12 00 00 FF FF 04 00 00 
      key    = 0x1245;
>00003288: 29 02 

    text
      help   = STRING_TOKEN(0x0055),
      text   = STRING_TOKEN(0x0055),
      flags  = INTERACTIVE,
>00003290: 0C 8F 55 00 55 00 46 12 00 00 FF FF 04 00 00 
      key    = 0x1246;
>00003305: 29 02 
  endform;
>00003307: 29 02 

  form formid = 6,
>00003309: 01 86 06 00 18 00 
       title = STRING_TOKEN(0x0018);

    text
>00003315: 03 08 64 00 64 00 00 00 
      help   = STRING_TOKEN(0x0064),
      text   = STRING_TOKEN(0x0064);

    numeric varid   = MyIfrNVData.RefreshGuidCount,
>00003323: 07 91 65 00 35 00 47 12 34 12 CA 00 04 10 00 FF 00 
            prompt  = STRING_TOKEN(0x0065),
            help    = STRING_TOKEN(0x0035),
            flags   = INTERACTIVE,
            key     = 0x1247,
            minimum = 0,
            maximum = 0xff,
            step    = 0,
            default = 0,
>00003340: 5B 06 00 00 00 00 
            refreshguid = { 0xF5E655D9, 0x02A6, 0x46f2, {0x9E, 0x76, 0xB8, 0xBE, 0x8E, 0x60, 0xAB, 0x22} },
>00003346: 62 12 D9 55 E6 F5 A6 02 F2 46 9E 76 B8 BE 8E 60 AB 22 
    endnumeric;
>00003364: 29 02 

    label 0x3234;
>00003366: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 32 
    label 0x2223;
>00003387: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 

  endform;
>00003408: 29 02 

  form formid = 0x1234,
>00003410: 01 86 34 12 19 00 
       title = STRING_TOKEN(0x0019);

    label 0x1234;
>00003416: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 12 



    label 0x2223;
>00003437: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 

  endform;
>00003458: 29 02 


  form formid = 7,
>00003460: 01 86 07 00 73 00 
    title = STRING_TOKEN(0x0073);

    subtitle text = STRING_TOKEN(0x0076);
>00003466: 02 87 76 00 00 00 00 
>00003473: 29 02 

    checkbox varid   = MyEfiBitVar.BitsData.NestBitCheckbox,
>00003475: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003493: 06 8E 7B 00 7C 00 25 00 02 00 11 00 00 01 
             prompt   = STRING_TOKEN(0x007B),
             help     = STRING_TOKEN(0x007C),
             flags    = CHECKBOX_DEFAULT,
    endcheckbox;
>00003507: 29 02 
>00003509: 29 02 

    oneof varid  = MyEfiBitVar.BitsData.NestBitOneof,
>00003511: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003529: 05 91 7D 00 7E 00 26 00 02 00 12 00 00 42 00 01 00 
      prompt      = STRING_TOKEN(0x007D),
      help        = STRING_TOKEN(0x007E),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00003546: 09 0A 2D 00 20 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00003556: 09 0A 2E 00 10 02 01 00 00 00 
    endoneof;
>00003566: 29 02 
>00003568: 29 02 

    numeric varid   = MyEfiBitVar.BitsData.NestBitNumeric,
>00003570: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003588: 07 91 7F 00 83 00 66 66 02 00 18 00 04 C4 02 0F 01 
            questionid = 0x6666,
            prompt  = STRING_TOKEN(0x007F),
            help    = STRING_TOKEN(0x0083),
            flags   = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 2,
            maximum = 15,
            step    = 1,
    endnumeric;
>00003605: 29 02 
>00003607: 29 02 

    oneof varid  = MyEfiBitVar.BitsData.NestByteField,
>00003609: 05 94 81 00 82 00 27 00 02 00 00 00 00 11 00 00 01 00 00 00 
      prompt      = STRING_TOKEN(0x0081),
      help        = STRING_TOKEN(0x0082),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00003629: 09 08 2D 00 21 01 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00003637: 09 08 2E 00 11 01 01 00 
    endoneof;
>00003645: 29 02 

    subtitle text = STRING_TOKEN(0x001B);
>00003647: 02 87 1B 00 00 00 00 
>00003654: 29 02 
    subtitle text = STRING_TOKEN(0x0077);
>00003656: 02 87 77 00 00 00 00 
>00003663: 29 02 

    checkbox varid   = MyEfiBitVar.EfiBitCheckbox,
>00003665: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003683: 06 8E 84 00 85 00 28 00 02 00 33 00 00 01 
      prompt   = STRING_TOKEN(0x0084),
      help     = STRING_TOKEN(0x0085),
      flags    = CHECKBOX_DEFAULT,
    endcheckbox;
>00003697: 29 02 
>00003699: 29 02 

  grayoutif  ideqval MyEfiBitVar.EfiBitGrayoutTest == 0;
>00003701: 19 82 
>00003703: 12 06 32 00 00 00 
    numeric varid   = MyEfiBitVar.EfiBitNumeric,
>00003709: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003727: 07 9A 88 00 89 00 29 00 02 00 25 00 00 44 00 00 00 00 07 00 00 00 00 00 00 00 
            prompt  = STRING_TOKEN(0x0088),
            help    = STRING_TOKEN(0x0089),
            minimum = 0,
            maximum = 7,
            step    = 0,
            default = 4, defaultstore = MyStandardDefault,
>00003753: 5B 09 00 00 02 04 00 00 00 
            default = 5, defaultstore = MyManufactureDefault,
>00003762: 5B 09 01 00 02 05 00 00 00 
    endnumeric;
>00003771: 29 02 
>00003773: 29 02 
  endif;
>00003775: 29 02 

      oneof varid  = MyEfiBitVar.EfiBitOneof,
>00003777: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003795: 05 9A 86 00 87 00 99 99 02 00 29 00 00 4A 00 00 00 00 01 00 00 00 00 00 00 00 
      questionid = 0x9999,
      prompt      = STRING_TOKEN(0x0086),
      help        = STRING_TOKEN(0x0087),
      option text = STRING_TOKEN(0x002D), value = 0x0, flags = MANUFACTURING;
>00003821: 09 0A 2D 00 22 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 0x1, flags = DEFAULT;
>00003831: 09 0A 2E 00 12 02 01 00 00 00 
    endoneof;
>00003841: 29 02 
>00003843: 29 02 

    subtitle text = STRING_TOKEN(0x001B);
>00003845: 02 87 1B 00 00 00 00 
>00003852: 29 02 
    subtitle text = STRING_TOKEN(0x0078);
>00003854: 02 87 78 00 00 00 00 
>00003861: 29 02 
    checkbox varid   = MyIfrNVData.MyBitData.NestBitCheckbox,
>00003863: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003881: 06 8E 7B 00 7C 00 2A 00 34 12 B1 06 00 01 
             prompt   = STRING_TOKEN(0x007B),
             help     = STRING_TOKEN(0x007C),
             flags    = CHECKBOX_DEFAULT,
    endcheckbox;
>00003895: 29 02 
>00003897: 29 02 

    oneof varid  = MyIfrNVData.MyBitData.NestBitOneof,
>00003899: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003917: 05 91 7D 00 7E 00 2B 00 34 12 B2 06 00 42 00 01 00 
      prompt      = STRING_TOKEN(0x007D),
      help        = STRING_TOKEN(0x007E),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00003934: 09 0A 2D 00 20 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00003944: 09 0A 2E 00 10 02 01 00 00 00 
    endoneof;
>00003954: 29 02 
>00003956: 29 02 

    numeric varid   = MyIfrNVData.MyBitData.NestBitNumeric,
>00003958: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003976: 07 91 7F 00 80 00 2C 00 34 12 B8 06 00 44 00 07 00 
            prompt  = STRING_TOKEN(0x007F),
            help    = STRING_TOKEN(0x0080),
            minimum = 0,
            maximum = 7,
            step    = 0,
            default = 6, defaultstore = MyStandardDefault,
>00003993: 5B 06 00 00 02 06 
            default = 7, defaultstore = MyManufactureDefault,
>00003999: 5B 06 01 00 02 07 
    endnumeric;
>00004005: 29 02 
>00004007: 29 02 

    oneof varid  = MyIfrNVData.MyBitData.NestByteField,
>00004009: 05 94 81 00 82 00 2D 00 34 12 D4 00 00 11 00 00 01 00 00 00 
      prompt      = STRING_TOKEN(0x0081),
      help        = STRING_TOKEN(0x0082),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00004029: 09 08 2D 00 21 01 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00004037: 09 08 2E 00 11 01 01 00 
    endoneof;
>00004045: 29 02 

    subtitle text = STRING_TOKEN(0x001B);
>00004047: 02 87 1B 00 00 00 00 
>00004054: 29 02 
    subtitle text = STRING_TOKEN(0x0079);
>00004056: 02 87 79 00 00 00 00 
>00004063: 29 02 

    oneof varid  = MyIfrNVData.BitOneof,
>00004065: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004083: 05 94 86 00 87 00 2E 00 34 12 80 06 00 46 00 00 01 00 00 00 
      prompt      = STRING_TOKEN(0x0086),
      help        = STRING_TOKEN(0x0087),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00004103: 09 0A 2D 00 21 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00004113: 09 0A 2E 00 11 02 01 00 00 00 
    endoneof;
>00004123: 29 02 
>00004125: 29 02 

    checkbox varid   = MyIfrNVData.BitCheckbox,
>00004127: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004145: 06 8E 84 00 85 00 2F 00 34 12 78 06 00 01 
             prompt   = STRING_TOKEN(0x0084),
             help     = STRING_TOKEN(0x0085),
             flags    = CHECKBOX_DEFAULT,
    endcheckbox;
>00004159: 29 02 
>00004161: 29 02 

    numeric varid   = MyIfrNVData.BitNumeric,
>00004163: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004181: 07 94 88 00 8A 00 30 00 34 12 90 06 00 4C 00 00 14 00 00 00 
            prompt  = STRING_TOKEN(0x0088),
            help    = STRING_TOKEN(0x008A),
            minimum = 0,
            maximum = 20,
            step    = 0,
            default = 16, defaultstore = MyStandardDefault,
>00004201: 5B 07 00 00 02 10 00 
            default = 17, defaultstore = MyManufactureDefault,
>00004208: 5B 07 01 00 02 11 00 
    endnumeric;
>00004215: 29 02 
>00004217: 29 02 

    subtitle text = STRING_TOKEN(0x001B);
>00004219: 02 87 1B 00 00 00 00 
>00004226: 29 02 
    subtitle text = STRING_TOKEN(0x007A);
>00004228: 02 87 7A 00 00 00 00 
>00004235: 29 02 

    numeric varid   = MyEfiUnionVar.UnionNumeric,
>00004237: 07 91 8B 00 8C 00 31 00 03 00 00 00 00 10 00 14 00 
            prompt  = STRING_TOKEN(0x008B),
            help    = STRING_TOKEN(0x008C),
            minimum = 0,
            maximum = 20,
            step    = 0,
            default = 7, defaultstore = MyStandardDefault,
>00004254: 5B 06 00 00 00 07 
            default = 8, defaultstore = MyManufactureDefault,
>00004260: 5B 06 01 00 00 08 
    endnumeric;
>00004266: 29 02 

    guidop
>00004268: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 00 00 00 00 01 01 01 00 
      guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} },
      datatype = MY_EFI_BITS_VARSTORE_DATA,
        data.EfiBitNumeric  = 1,
        data.EfiBitOneof = 1,
        data.EfiBitCheckbox = 1,
    endguidop;
>00004294: 29 02 

  endform;

endformset;
>00004296: 1E 82 
>00004298: 46 02 
>00004300: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004318: 07 9A 00 00 00 00 32 00 02 00 20 00 00 45 00 00 00 00 10 00 00 00 00 00 00 00 
>00004344: 29 02 
>00004346: 29 02 
>00004348: 29 02 
>00004350: 29 02 
//
//  All Opcode Record List
//
>00000000: 0E A7 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 13 00 14 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000039: 5C 06 5B 00 00 00 
>00000045: 5C 06 5D 00 01 00 
>00000051: 24 22 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 34 12 DB 00 4D 79 49 66 72 4E 56 44 61 74 61 00 
>00000085: 26 23 01 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 56 61 72 00 
>00000120: 26 26 02 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 42 69 74 56 61 72 00 
>00000158: 26 28 03 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 01 00 4D 79 45 66 69 55 6E 69 6F 6E 56 61 72 00 
>00000198: 25 14 04 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
>00000218: 01 86 01 00 15 00 
>00000224: 02 87 1A 00 00 00 00 
>00000231: 29 02 
>00000233: 02 87 1B 00 00 00 00 
>00000240: 29 02 
>00000242: 03 08 1C 00 50 00 1D 00 
>00000250: 0C 8F 54 00 54 00 37 12 00 00 FF FF 04 00 00 
>00000265: 29 02 
>00000267: 0C 8F 55 00 55 00 38 12 00 00 FF FF 04 00 00 
>00000282: 29 02 
>00000284: 0C 8F 57 00 57 00 43 12 00 00 FF FF 04 00 00 
>00000299: 29 02 
>00000301: 0C 8F 58 00 58 00 44 12 00 00 FF FF 04 00 00 
>00000316: 29 02 
>00000318: 05 91 1F 00 26 00 01 00 34 12 5D 00 00 10 00 02 00 
>00000335: 09 07 2A 00 00 00 00 
>00000342: 09 07 2B 00 00 00 01 
>00000349: 09 07 2C 00 10 00 02 
>00000356: 29 02 
>00000358: 05 91 1F 00 26 00 02 00 34 12 76 00 00 10 00 01 00 
>00000375: 5B 85 00 00 08 
>00000380: 5A 82 
>00000382: 58 82 
>00000384: 45 0A 00 00 00 00 00 00 00 00 
>00000394: 2F 02 
>00000396: 45 0A 00 00 00 00 00 00 00 00 
>00000406: 40 04 01 00 
>00000410: 45 0A 04 00 00 00 00 00 00 00 
>00000420: 39 02 
>00000422: 45 0A 00 0F 00 00 00 00 00 00 
>00000432: 35 02 
>00000434: 45 0A 00 00 00 00 00 00 00 00 
>00000444: 45 0A 02 00 00 00 00 00 00 00 
>00000454: 3A 02 
>00000456: 2F 02 
>00000458: 45 0A 00 00 00 00 00 00 00 00 
>00000468: 45 0A 01 00 00 00 00 00 00 00 
>00000478: 50 02 
>00000480: 50 02 
>00000482: 29 02 
>00000484: 29 02 
>00000486: 29 02 
>00000488: 09 07 2D 00 00 00 00 
>00000495: 09 07 2E 00 00 00 01 
>00000502: 29 02 
>00000504: 19 82 
>00000506: 12 06 01 00 01 00 
>00000512: 0A 82 
>00000514: 40 84 01 00 
>00000518: 45 0A 00 00 00 00 00 00 00 00 
>00000528: 2F 02 
>00000530: 29 02 
>00000532: 06 8E 2F 00 30 00 03 00 34 12 5C 00 00 03 
>00000546: 5B 06 00 00 00 01 
>00000552: 29 02 
>00000554: 29 02 
>00000556: 29 02 
>00000558: 0A 82 
>00000560: 12 06 01 00 00 00 
>00000566: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 22 22 
>00000587: 23 8F 8D 00 5A 00 04 00 34 12 66 00 10 08 00 
>00000602: 09 08 8F 00 01 01 02 00 
>00000610: 09 08 8E 00 01 01 01 00 
>00000618: 09 08 90 00 01 01 03 00 
>00000626: 0A 82 
>00000628: 12 06 02 00 00 00 
>00000634: 09 08 91 00 01 01 04 00 
>00000642: 29 02 
>00000644: 29 02 
>00000646: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>00000667: 29 02 
>00000669: 1E 82 
>00000671: 12 06 01 00 02 00 
>00000677: 23 8F 52 00 50 00 05 00 34 12 5E 00 10 08 00 
>00000692: 09 07 27 00 00 00 03 
>00000699: 09 07 28 00 00 00 02 
>00000706: 09 07 29 00 00 00 01 
>00000713: 5B 08 00 00 0B 01 02 03 
>00000721: 29 02 
>00000723: 29 02 
>00000725: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 64 00 
>00000746: 0F 0F 41 00 51 00 34 12 00 00 FF FF 04 34 12 
>00000761: 0F 0F 42 00 51 00 35 12 00 00 FF FF 04 34 12 
>00000776: 05 91 52 00 26 00 06 00 34 12 59 00 10 10 00 01 00 
>00000793: 09 07 27 00 00 00 00 
>00000800: 09 07 28 00 10 00 01 
>00000807: 63 85 AC 00 05 
>00000812: 12 06 06 00 00 00 
>00000818: 29 02 
>00000820: 29 02 
>00000822: 05 91 53 00 26 00 07 00 34 12 5A 00 10 10 00 01 00 
>00000839: 09 07 27 00 10 00 00 
>00000846: 09 07 28 00 00 00 01 
>00000853: 11 84 47 00 
>00000857: 13 06 06 00 07 00 
>00000863: 29 02 
>00000865: 29 02 
>00000867: 05 91 20 00 26 00 08 00 34 12 5B 00 10 10 00 03 00 
>00000884: 09 07 27 00 00 00 00 
>00000891: 09 07 28 00 10 00 01 
>00000898: 09 07 29 00 00 00 03 
>00000905: 29 02 
>00000907: 05 91 22 00 23 00 09 00 34 12 D9 00 30 10 00 03 00 
>00000924: 09 07 27 00 00 00 00 
>00000931: 09 07 28 00 10 00 01 
>00000938: 09 07 29 00 00 00 03 
>00000945: 29 02 
>00000947: 07 91 24 00 25 00 0A 00 34 12 DA 00 30 10 00 F0 00 
>00000964: 5B 06 00 00 00 00 
>00000970: 29 02 
>00000972: 1C 90 48 00 49 00 36 12 34 12 00 00 04 06 28 00 
>00000988: 11 84 63 00 
>00000992: 58 82 
>00000994: 4E 04 62 00 
>00000998: 30 02 
>00001000: 29 02 
>00001002: 29 02 
>00001004: 29 02 
>00001006: 07 91 32 00 35 00 0B 00 34 12 52 00 01 10 00 F0 00 
>00001023: 5B 06 00 00 00 15 
>00001029: 29 02 
>00001031: 07 91 33 00 35 00 0C 00 34 12 52 00 00 10 00 F0 00 
>00001048: 5B 85 00 00 08 
>00001053: 5A 82 
>00001055: 45 8A 11 11 00 00 00 00 00 00 
>00001065: 51 14 6D 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
>00001085: 29 02 
>00001087: 29 02 
>00001089: 29 02 
>00001091: 11 84 47 00 
>00001095: 12 86 0C 00 63 00 
>00001101: 13 06 0C 00 11 11 
>00001107: 16 03 00 
>00001110: 14 0E 0C 00 04 00 01 00 03 00 05 00 07 00 
>00001124: 16 03 00 
>00001127: 29 02 
>00001129: 29 02 
>00001131: 29 02 
>00001133: 07 91 34 00 36 00 11 11 01 00 00 00 04 30 00 FA 00 
>00001150: 5B 06 00 00 00 12 
>00001156: 5B 06 01 00 00 13 
>00001162: 29 02 
>00001164: 07 91 92 00 5F 00 0D 00 04 00 92 00 00 10 00 FF 00 
>00001190: 0B 02 
>00001192: 5B 06 00 00 00 10 
>00001198: 5B 06 01 00 00 11 
>00001204: 29 02 
>00001206: 07 94 93 00 60 00 0E 00 04 00 93 00 00 11 00 00 FF FF 00 00 
>00001232: 5B 07 00 00 01 12 00 
>00001239: 5B 07 01 00 01 13 00 
>00001246: 29 02 
>00001248: 1C 90 94 00 61 00 0F 00 04 00 94 00 00 02 14 00 
>00001264: 29 02 
>00001266: 05 94 1F 00 1E 00 10 00 01 00 01 00 00 11 00 00 01 00 00 00 
>00001286: 09 08 2D 00 01 01 00 00 
>00001294: 09 08 2E 00 11 01 01 00 
>00001302: 29 02 
>00001304: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 00 
>00001325: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 10 
>00001346: 19 82 
>00001348: 12 86 0C 00 17 00 
>00001354: 12 06 01 00 01 00 
>00001360: 15 02 
>00001362: 29 02 
>00001364: 07 91 31 00 37 00 11 00 34 12 55 00 00 10 00 F3 01 
>00001381: 5B 06 00 00 00 12 
>00001387: 5B 06 01 00 00 13 
>00001393: 29 02 
>00001395: 29 02 
>00001397: 07 91 69 00 6A 00 39 12 34 12 C6 00 04 30 00 FF 01 
>00001414: 5B 06 00 00 00 12 
>00001420: 29 02 
>00001422: 07 91 67 00 68 00 40 12 34 12 C5 00 04 30 00 FF 01 
>00001439: 5B 06 00 00 00 12 
>00001445: 29 02 
>00001447: 23 8F 67 00 68 00 52 12 34 12 CC 00 04 03 00 
>00001462: 09 07 27 00 00 00 01 
>00001469: 09 07 28 00 00 00 02 
>00001476: 09 07 29 00 00 00 03 
>00001483: 29 02 
>00001485: 0D 88 5B 00 5C 00 00 00 
>00001493: 29 02 
>00001495: 0D 88 5D 00 5E 00 01 00 
>00001503: 29 02 
>00001505: 19 82 
>00001507: 60 92 07 56 B7 85 CE F7 1E 47 B7 E4 2A EA 5F 72 32 EE 
>00001525: 17 02 
>00001527: 29 02 
>00001529: 03 08 38 00 39 00 00 00 
>00001537: 29 02 
>00001539: 07 94 6E 00 6F 00 50 12 01 00 06 00 04 11 00 00 FF 00 00 00 
>00001559: 5B 07 00 00 01 12 00 
>00001566: 29 02 
>00001568: 0C 8F 70 00 71 00 30 13 00 00 FF FF 04 00 00 
>00001583: 29 02 
>00001585: 0F 0F 3B 00 51 00 12 00 00 00 FF FF 00 02 00 
>00001600: 0F 0F 3C 00 51 00 13 00 00 00 FF FF 00 03 00 
>00001615: 0F 0F 3D 00 51 00 14 00 00 00 FF FF 00 04 00 
>00001630: 0F 0F 3F 00 40 00 15 00 00 00 FF FF 00 05 00 
>00001645: 0F 0F 3E 00 51 00 16 00 00 00 FF FF 00 06 00 
>00001660: 0F 21 6B 00 6C 00 17 00 00 00 FF FF 00 01 00 01 00 70 64 F5 B3 41 61 21 46 8F 19 70 4E 57 7A A9 E8 
>00001693: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 21 21 21 21 00 00 00 00 
>00001719: 29 02 
>00001721: 0F 0F 74 00 75 00 18 00 00 00 FF FF 00 07 00 
>00001736: 29 02 
>00001740: 12 06 02 00 00 00 
>00001746: 01 86 02 00 16 00 
>00001752: 1A 8E 4C 00 4D 00 19 00 00 00 FF FF 00 10 
>00001766: 5B 09 00 00 06 D4 07 01 01 
>00001775: 11 84 47 00 
>00001779: 40 84 19 00 
>00001783: 44 06 00 00 00 FF 
>00001789: 35 02 
>00001791: 42 03 18 
>00001794: 39 02 
>00001796: 42 03 1F 
>00001799: 2F 02 
>00001801: 40 04 19 00 
>00001805: 44 06 00 00 FF 00 
>00001811: 35 02 
>00001813: 42 03 10 
>00001816: 39 02 
>00001818: 42 03 02 
>00001821: 2F 02 
>00001823: 40 04 19 00 
>00001827: 44 06 00 00 FF 00 
>00001833: 35 02 
>00001835: 42 03 10 
>00001838: 39 02 
>00001840: 42 03 04 
>00001843: 2F 02 
>00001845: 16 03 00 
>00001848: 40 04 19 00 
>00001852: 44 06 00 00 FF 00 
>00001858: 35 02 
>00001860: 42 03 10 
>00001863: 39 02 
>00001865: 42 03 06 
>00001868: 2F 02 
>00001870: 16 03 00 
>00001873: 40 04 19 00 
>00001877: 44 06 00 00 FF 00 
>00001883: 35 02 
>00001885: 42 03 10 
>00001888: 39 02 
>00001890: 42 03 09 
>00001893: 2F 02 
>00001895: 16 03 00 
>00001898: 40 04 19 00 
>00001902: 44 06 00 00 FF 00 
>00001908: 35 02 
>00001910: 42 03 10 
>00001913: 39 02 
>00001915: 42 03 0B 
>00001918: 2F 02 
>00001920: 16 03 00 
>00001923: 15 02 
>00001925: 29 02 
>00001927: 29 02 
>00001929: 11 84 47 00 
>00001933: 40 84 19 00 
>00001937: 44 06 00 00 00 FF 
>00001943: 35 02 
>00001945: 42 03 18 
>00001948: 39 02 
>00001950: 42 03 1E 
>00001953: 2F 02 
>00001955: 40 04 19 00 
>00001959: 44 06 00 00 FF 00 
>00001965: 35 02 
>00001967: 42 03 10 
>00001970: 39 02 
>00001972: 42 03 02 
>00001975: 2F 02 
>00001977: 15 02 
>00001979: 29 02 
>00001981: 29 02 
>00001983: 11 84 47 00 
>00001987: 40 84 19 00 
>00001991: 44 06 00 00 00 FF 
>00001997: 35 02 
>00001999: 42 03 18 
>00002002: 39 02 
>00002004: 42 03 1D 
>00002007: 2F 02 
>00002009: 40 04 19 00 
>00002013: 44 06 00 00 FF 00 
>00002019: 35 02 
>00002021: 42 03 10 
>00002024: 39 02 
>00002026: 42 03 02 
>00002029: 2F 02 
>00002031: 15 02 
>00002033: 40 04 19 00 
>00002037: 44 06 FF FF 00 00 
>00002043: 35 02 
>00002045: 42 03 00 
>00002048: 39 02 
>00002050: 43 04 D4 07 
>00002054: 2F 02 
>00002056: 40 04 19 00 
>00002060: 44 06 FF FF 00 00 
>00002066: 35 02 
>00002068: 42 03 00 
>00002071: 39 02 
>00002073: 43 04 D8 07 
>00002077: 2F 02 
>00002079: 16 03 00 
>00002082: 40 04 19 00 
>00002086: 44 06 FF FF 00 00 
>00002092: 35 02 
>00002094: 42 03 00 
>00002097: 39 02 
>00002099: 43 04 2C 4E 
>00002103: 2F 02 
>00002105: 16 03 00 
>00002108: 40 04 19 00 
>00002112: 44 06 FF FF 00 00 
>00002118: 35 02 
>00002120: 42 03 00 
>00002123: 39 02 
>00002125: 43 04 30 4E 
>00002129: 2F 02 
>00002131: 16 03 00 
>00002134: 40 04 19 00 
>00002138: 44 06 FF FF 00 00 
>00002144: 35 02 
>00002146: 42 03 00 
>00002149: 39 02 
>00002151: 43 04 E4 07 
>00002155: 2F 02 
>00002157: 16 03 00 
>00002160: 40 04 19 00 
>00002164: 44 06 FF FF 00 00 
>00002170: 35 02 
>00002172: 42 03 00 
>00002175: 39 02 
>00002177: 43 04 E8 07 
>00002181: 2F 02 
>00002183: 16 03 00 
>00002186: 40 04 19 00 
>00002190: 44 06 FF FF 00 00 
>00002196: 35 02 
>00002198: 42 03 00 
>00002201: 39 02 
>00002203: 43 04 EC 07 
>00002207: 2F 02 
>00002209: 16 03 00 
>00002212: 40 04 19 00 
>00002216: 44 06 FF FF 00 00 
>00002222: 35 02 
>00002224: 42 03 00 
>00002227: 39 02 
>00002229: 43 04 F0 07 
>00002233: 2F 02 
>00002235: 16 03 00 
>00002238: 40 04 19 00 
>00002242: 44 06 FF FF 00 00 
>00002248: 35 02 
>00002250: 42 03 00 
>00002253: 39 02 
>00002255: 43 04 F4 07 
>00002259: 2F 02 
>00002261: 16 03 00 
>00002264: 17 02 
>00002266: 15 02 
>00002268: 29 02 
>00002270: 29 02 
>00002272: 29 02 
>00002274: 0C 8F 59 00 59 00 41 12 00 00 FF FF 04 00 00 
>00002289: 29 02 
>00002291: 0C 8F 56 00 56 00 42 12 00 00 FF FF 04 00 00 
>00002306: 29 02 
>00002308: 1B 8E 4E 00 4F 00 1A 00 00 00 FF FF 00 10 
>00002322: 29 02 
>00002324: 1B 8E 4E 00 4E 00 1B 00 34 12 C7 00 00 04 
>00002338: 5B 08 00 00 05 0F 21 21 
>00002346: 29 02 
>00002348: 06 8E 2F 00 30 00 1C 00 34 12 5C 00 00 01 
>00002362: 29 02 
>00002364: 03 08 4A 00 50 00 00 00 
>00002372: 03 08 4A 00 50 00 4B 00 
>00002380: 0F 0F 3A 00 51 00 1D 00 00 00 FF FF 00 01 00 
>00002395: 0F 8D 43 00 45 00 48 12 34 12 7F 00 04 
>00002408: 5B 1B 00 00 0C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 5A 00 
>00002435: 29 02 
>00002437: 0F 0D 44 00 46 00 49 12 00 00 FF FF 04 
>00002450: 29 02 
>00002452: 29 02 
>00002454: 01 86 03 00 17 00 
>00002460: 0A 82 
>00002462: 12 06 11 11 6F 00 
>00002468: 03 08 4A 00 50 00 00 00 
>00002476: 29 02 
>00002478: 0F 0F 3A 00 51 00 1E 00 00 00 FF FF 00 01 00 
>00002493: 07 91 33 00 35 00 78 56 34 12 77 00 04 10 00 FF 00 
>00002510: 5B 06 00 00 00 00 
>00002516: 1D 03 03 
>00002519: 29 02 
>00002521: 19 82 
>00002523: 4E 84 B0 00 
>00002527: 4E 04 AF 00 
>00002531: 64 12 51 0A E6 63 7D 49 27 D4 C4 A5 B8 AB DC 3A AE B6 
>00002549: 29 02 
>00002551: 07 91 AD 00 AE 00 1F 00 34 12 CB 00 00 10 00 F3 00 
>00002568: 29 02 
>00002570: 29 02 
>00002572: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 22 
>00002593: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>00002614: 29 02 
>00002616: 5D A8 04 00 95 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 96 00 EC F4 D2 3B 24 E5 E4 46 A9 D8 51 01 17 42 55 62 
>00002656: 05 91 97 00 26 00 20 00 34 12 C0 00 00 10 00 04 00 
>00002673: 2D 02 
>00002675: 2B 87 34 12 C1 00 00 
>00002682: 45 0A 00 00 00 00 00 00 00 00 
>00002692: 30 02 
>00002694: 45 0A 00 00 00 00 00 00 00 00 
>00002704: 2B 07 34 12 C2 00 01 
>00002711: 45 0A 00 0F 00 00 00 00 00 00 
>00002721: 35 02 
>00002723: 45 0A 08 00 00 00 00 00 00 00 
>00002733: 39 02 
>00002735: 2B 07 34 12 C4 00 00 
>00002742: 45 0A 01 00 00 00 00 00 00 00 
>00002752: 3B 02 
>00002754: 2F 02 
>00002756: 55 02 
>00002758: 2B 07 34 12 C2 00 01 
>00002765: 22 82 
>00002767: 45 0A F8 03 00 00 00 00 00 00 
>00002777: 45 0A 01 00 00 00 00 00 00 00 
>00002787: 45 0A F8 02 00 00 00 00 00 00 
>00002797: 45 0A 02 00 00 00 00 00 00 00 
>00002807: 45 0A E8 03 00 00 00 00 00 00 
>00002817: 45 0A 03 00 00 00 00 00 00 00 
>00002827: 45 0A E8 02 00 00 00 00 00 00 
>00002837: 45 0A 04 00 00 00 00 00 00 00 
>00002847: 29 02 
>00002849: 50 02 
>00002851: 50 02 
>00002853: 29 02 
>00002855: 2E 02 
>00002857: 58 82 
>00002859: 45 0A 00 00 00 00 00 00 00 00 
>00002869: 30 02 
>00002871: 2C 07 34 12 C1 00 00 
>00002878: 58 02 
>00002880: 22 82 
>00002882: 45 0A 01 00 00 00 00 00 00 00 
>00002892: 45 0A F8 03 00 00 00 00 00 00 
>00002902: 45 0A 02 00 00 00 00 00 00 00 
>00002912: 45 0A F8 02 00 00 00 00 00 00 
>00002922: 45 0A 03 00 00 00 00 00 00 00 
>00002932: 45 0A E8 03 00 00 00 00 00 00 
>00002942: 45 0A 04 00 00 00 00 00 00 00 
>00002952: 45 0A E8 02 00 00 00 00 00 00 
>00002962: 29 02 
>00002964: 2C 07 34 12 C2 00 01 
>00002971: 15 02 
>00002973: 58 02 
>00002975: 22 82 
>00002977: 45 0A 01 00 00 00 00 00 00 00 
>00002987: 45 0A 04 00 00 00 00 00 00 00 
>00002997: 45 0A 02 00 00 00 00 00 00 00 
>00003007: 45 0A 03 00 00 00 00 00 00 00 
>00003017: 45 0A 03 00 00 00 00 00 00 00 
>00003027: 45 0A 04 00 00 00 00 00 00 00 
>00003037: 45 0A 04 00 00 00 00 00 00 00 
>00003047: 45 0A 03 00 00 00 00 00 00 00 
>00003057: 29 02 
>00003059: 2C 07 34 12 C4 00 00 
>00003066: 15 02 
>00003068: 29 02 
>00003070: 09 07 98 00 10 00 00 
>00003077: 09 07 99 00 00 00 01 
>00003084: 09 07 9A 00 00 00 02 
>00003091: 09 07 9B 00 00 00 03 
>00003098: 09 07 9C 00 00 00 04 
>00003105: 29 02 
>00003107: 19 82 
>00003109: 46 02 
>00003111: 06 8E 9D 00 30 00 21 00 34 12 C1 00 00 00 
>00003125: 29 02 
>00003127: 29 02 
>00003129: 19 82 
>00003131: 46 02 
>00003133: 0A 82 
>00003135: 12 06 21 00 00 00 
>00003141: 05 94 9E 00 26 00 22 00 34 12 C2 00 00 11 E8 02 F8 03 00 00 
>00003161: 09 08 A0 00 11 01 F8 03 
>00003169: 09 08 A1 00 01 01 F8 02 
>00003177: 09 08 A2 00 01 01 E8 03 
>00003185: 09 08 A3 00 01 01 E8 02 
>00003193: 29 02 
>00003195: 29 02 
>00003197: 29 02 
>00003199: 19 82 
>00003201: 46 02 
>00003203: 0A 82 
>00003205: 12 06 21 00 00 00 
>00003211: 05 91 9F 00 26 00 23 00 34 12 C4 00 00 10 03 04 00 
>00003228: 09 07 A4 00 10 00 04 
>00003235: 09 07 A5 00 00 00 03 
>00003242: 29 02 
>00003244: 29 02 
>00003246: 29 02 
>00003248: 0F 0F 3A 00 51 00 24 00 00 00 FF FF 00 01 00 
>00003263: 29 02 
>00003265: 01 86 05 00 66 00 
>00003271: 61 02 
>00003273: 0C 8F 54 00 54 00 45 12 00 00 FF FF 04 00 00 
>00003288: 29 02 
>00003290: 0C 8F 55 00 55 00 46 12 00 00 FF FF 04 00 00 
>00003305: 29 02 
>00003307: 29 02 
>00003309: 01 86 06 00 18 00 
>00003315: 03 08 64 00 64 00 00 00 
>00003323: 07 91 65 00 35 00 47 12 34 12 CA 00 04 10 00 FF 00 
>00003340: 5B 06 00 00 00 00 
>00003346: 62 12 D9 55 E6 F5 A6 02 F2 46 9E 76 B8 BE 8E 60 AB 22 
>00003364: 29 02 
>00003366: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 32 
>00003387: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>00003408: 29 02 
>00003410: 01 86 34 12 19 00 
>00003416: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 12 
>00003437: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>00003458: 29 02 
>00003460: 01 86 07 00 73 00 
>00003466: 02 87 76 00 00 00 00 
>00003473: 29 02 
>00003475: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003493: 06 8E 7B 00 7C 00 25 00 02 00 11 00 00 01 
>00003507: 29 02 
>00003509: 29 02 
>00003511: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003529: 05 91 7D 00 7E 00 26 00 02 00 12 00 00 42 00 01 00 
>00003546: 09 0A 2D 00 20 02 00 00 00 00 
>00003556: 09 0A 2E 00 10 02 01 00 00 00 
>00003566: 29 02 
>00003568: 29 02 
>00003570: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003588: 07 91 7F 00 83 00 66 66 02 00 18 00 04 C4 02 0F 01 
>00003605: 29 02 
>00003607: 29 02 
>00003609: 05 94 81 00 82 00 27 00 02 00 00 00 00 11 00 00 01 00 00 00 
>00003629: 09 08 2D 00 21 01 00 00 
>00003637: 09 08 2E 00 11 01 01 00 
>00003645: 29 02 
>00003647: 02 87 1B 00 00 00 00 
>00003654: 29 02 
>00003656: 02 87 77 00 00 00 00 
>00003663: 29 02 
>00003665: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003683: 06 8E 84 00 85 00 28 00 02 00 33 00 00 01 
>00003697: 29 02 
>00003699: 29 02 
>00003701: 19 82 
>00003703: 12 06 32 00 00 00 
>00003709: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003727: 07 9A 88 00 89 00 29 00 02 00 25 00 00 44 00 00 00 00 07 00 00 00 00 00 00 00 
>00003753: 5B 09 00 00 02 04 00 00 00 
>00003762: 5B 09 01 00 02 05 00 00 00 
>00003771: 29 02 
>00003773: 29 02 
>00003775: 29 02 
>00003777: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003795: 05 9A 86 00 87 00 99 99 02 00 29 00 00 4A 00 00 00 00 01 00 00 00 00 00 00 00 
>00003821: 09 0A 2D 00 22 02 00 00 00 00 
>00003831: 09 0A 2E 00 12 02 01 00 00 00 
>00003841: 29 02 
>00003843: 29 02 
>00003845: 02 87 1B 00 00 00 00 
>00003852: 29 02 
>00003854: 02 87 78 00 00 00 00 
>00003861: 29 02 
>00003863: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003881: 06 8E 7B 00 7C 00 2A 00 34 12 B1 06 00 01 
>00003895: 29 02 
>00003897: 29 02 
>00003899: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003917: 05 91 7D 00 7E 00 2B 00 34 12 B2 06 00 42 00 01 00 
>00003934: 09 0A 2D 00 20 02 00 00 00 00 
>00003944: 09 0A 2E 00 10 02 01 00 00 00 
>00003954: 29 02 
>00003956: 29 02 
>00003958: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00003976: 07 91 7F 00 80 00 2C 00 34 12 B8 06 00 44 00 07 00 
>00003993: 5B 06 00 00 02 06 
>00003999: 5B 06 01 00 02 07 
>00004005: 29 02 
>00004007: 29 02 
>00004009: 05 94 81 00 82 00 2D 00 34 12 D4 00 00 11 00 00 01 00 00 00 
>00004029: 09 08 2D 00 21 01 00 00 
>00004037: 09 08 2E 00 11 01 01 00 
>00004045: 29 02 
>00004047: 02 87 1B 00 00 00 00 
>00004054: 29 02 
>00004056: 02 87 79 00 00 00 00 
>00004063: 29 02 
>00004065: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004083: 05 94 86 00 87 00 2E 00 34 12 80 06 00 46 00 00 01 00 00 00 
>00004103: 09 0A 2D 00 21 02 00 00 00 00 
>00004113: 09 0A 2E 00 11 02 01 00 00 00 
>00004123: 29 02 
>00004125: 29 02 
>00004127: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004145: 06 8E 84 00 85 00 2F 00 34 12 78 06 00 01 
>00004159: 29 02 
>00004161: 29 02 
>00004163: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004181: 07 94 88 00 8A 00 30 00 34 12 90 06 00 4C 00 00 14 00 00 00 
>00004201: 5B 07 00 00 02 10 00 
>00004208: 5B 07 01 00 02 11 00 
>00004215: 29 02 
>00004217: 29 02 
>00004219: 02 87 1B 00 00 00 00 
>00004226: 29 02 
>00004228: 02 87 7A 00 00 00 00 
>00004235: 29 02 
>00004237: 07 91 8B 00 8C 00 31 00 03 00 00 00 00 10 00 14 00 
>00004254: 5B 06 00 00 00 07 
>00004260: 5B 06 01 00 00 08 
>00004266: 29 02 
>00004268: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 00 00 00 00 01 01 01 00 
>00004294: 29 02 
>00004296: 1E 82 
>00004298: 46 02 
>00004300: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00004318: 07 9A 00 00 00 00 32 00 02 00 20 00 00 45 00 00 00 00 10 00 00 00 00 00 00 00 
>00004344: 29 02 
>00004346: 29 02 
>00004348: 29 02 
>00004350: 29 02 

Total Size of all record is 00004352

***************************************************************
PackAlign = 8
		struct MY_EFI_BITS_VARSTORE_DATA : Align : [1]  TotalSize : [0x8]

		struct MY_EFI_BITS_VARSTORE_DATA	{
			+00000000[00000000] BitsData <MY_BITS_DATA>
			+00000004[00000004] EfiBitGrayoutTest <UINT32>
			+00000004[00000004] EfiBitNumeric <UINT32>
			+00000004[00000004] EfiBitOneof <UINT32>
			+00000004[00000004] EfiBitCheckbox <UINT32>
			+00000004[00000004] <UINT32>
		};
---------------------------------------------------------------
		struct MY_EFI_VARSTORE_DATA : Align : [1]  TotalSize : [0x8]

		struct MY_EFI_VARSTORE_DATA	{
			+00000000[00000000] Field8 <UINT8>
			+00000001[00000001] Field16 <UINT16>
			+00000003[00000003] OrderedList[3] <UINT8>
			+00000006[00000006] SubmittedCallback <UINT16>
		};
---------------------------------------------------------------
		struct DRIVER_SAMPLE_CONFIGURATION : Align : [1]  TotalSize : [0xdb]

		struct DRIVER_SAMPLE_CONFIGURATION	{
			+00000000[00000000] MyStringData[40] <UINT16>
			+00000080[00000050] SomethingHiddenForHtml <UINT16>
			+00000082[00000052] HowOldAreYouInYearsManual <UINT8>
			+00000083[00000053] HowTallAreYouManual <UINT16>
			+00000085[00000055] HowOldAreYouInYears <UINT8>
			+00000086[00000056] HowTallAreYou <UINT16>
			+00000088[00000058] MyFavoriteNumber <UINT8>
			+00000089[00000059] TestLateCheck <UINT8>
			+00000090[0000005a] TestLateCheck2 <UINT8>
			+00000091[0000005b] QuestionAboutTreeHugging <UINT8>
			+00000092[0000005c] ChooseToActivateNuclearWeaponry <UINT8>
			+00000093[0000005d] SuppressGrayOutSomething <UINT8>
			+00000094[0000005e] OrderedList[8] <UINT8>
			+00000102[00000066] BootOrder[8] <UINT16>
			+00000118[00000076] BootOrderLarge <UINT8>
			+00000119[00000077] DynamicRefresh <UINT8>
			+00000120[00000078] DynamicOneof <UINT8>
			+00000121[00000079] DynamicOrderedList[5] <UINT8>
			+00000126[0000007e] Reserved <UINT8>
			+00000127[0000007f] RefData <EFI_HII_REF>
			+00000149[00000095] NameValueVar0 <UINT8>
			+00000150[00000096] NameValueVar1 <UINT16>
			+00000152[00000098] NameValueVar2[20] <UINT16>
			+00000192[000000c0] SerialPortNo <UINT8>
			+00000193[000000c1] SerialPortStatus <UINT8>
			+00000194[000000c2] SerialPortIo <UINT16>
			+00000196[000000c4] SerialPortIrq <UINT8>
			+00000197[000000c5] GetDefaultValueFromCallBack <UINT8>
			+00000198[000000c6] GetDefaultValueFromAccess <UINT8>
			+00000199[000000c7] Time <EFI_HII_TIME>
			+00000202[000000ca] RefreshGuidCount <UINT8>
			+00000203[000000cb] Match2 <UINT8>
			+00000204[000000cc] GetDefaultValueFromCallBackForOrderedList[3] <UINT8>
			+00000207[000000cf] BitCheckbox <UINT8>
			+00000207[000000cf] ReservedBits <UINT8>
			+00000208[000000d0] BitOneof <UINT16>
			+00000208[000000d0] <UINT16>
			+00000210[000000d2] BitNumeric <UINT16>
			+00000212[000000d4] MyBitData <MY_BITS_DATA>
			+00000216[000000d8] MyUnionData <MY_EFI_UNION_DATA>
			+00000217[000000d9] QuestionXUefiKeywordRestStyle <UINT8>
			+00000218[000000da] QuestionNonXUefiKeywordRestStyle <UINT8>
		};
---------------------------------------------------------------
		struct MY_EFI_UNION_DATA : Align : [1]  TotalSize : [0x1]

		struct MY_EFI_UNION_DATA	{
			+00000000[00000000] UnionNumeric <UINT8>
			+00000000[00000000] UnionNumericAlias <UINT8>
		};
---------------------------------------------------------------
		struct MY_BITS_DATA : Align : [1]  TotalSize : [0x4]

		struct MY_BITS_DATA	{
			+00000000[00000000] NestByteField <UINT16>
			+00000002[00000002] <UINT8>
			+00000002[00000002] NestBitCheckbox <UINT8>
			+00000002[00000002] NestBitOneof <UINT8>
			+00000002[00000002] <UINT8>
			+00000003[00000003] NestBitNumeric <UINT8>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : Align : [16]  TotalSize : [0x16]

		struct EFI_HII_REF	{
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <EFI_GUID>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : Align : [1]  TotalSize : [0x3]

		struct EFI_HII_TIME	{
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : Align : [2]  TotalSize : [0x2]

		struct EFI_STRING_ID	{
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : Align : [2]  TotalSize : [0x4]

		struct EFI_HII_DATE	{
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct EFI_GUID : Align : [8]  TotalSize : [0x10]

		struct EFI_GUID	{
		};
---------------------------------------------------------------
		struct BOOLEAN : Align : [1]  TotalSize : [0x1]

		struct BOOLEAN	{
		};
---------------------------------------------------------------
		struct UINT8 : Align : [1]  TotalSize : [0x1]

		struct UINT8	{
		};
---------------------------------------------------------------
		struct UINT16 : Align : [2]  TotalSize : [0x2]

		struct UINT16	{
		};
---------------------------------------------------------------
		struct UINT32 : Align : [4]  TotalSize : [0x4]

		struct UINT32	{
		};
---------------------------------------------------------------
		struct UINT64 : Align : [8]  TotalSize : [0x8]

		struct UINT64	{
		};
---------------------------------------------------------------
***************************************************************
