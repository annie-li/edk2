//
//  VFR compiler version 2.01 (UEFI 2.4) Developer Build based on Revision: Unknown
//
#line 1 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"
#line 1 "c:\\edk2\\Build\\Ovmf3264\\DEBUG_VS2019\\X64\\MdeModulePkg\\Universal\\DriverSampleDxe\\DriverSampleDxe\\DEBUG\\DriverSampleStrDefs.h"





































































































































































































































extern unsigned char DriverSampleStrings[];



























#line 259 "c:\\edk2\\Build\\Ovmf3264\\DEBUG_VS2019\\X64\\MdeModulePkg\\Universal\\DriverSampleDxe\\DriverSampleDxe\\DEBUG\\DriverSampleStrDefs.h"

#line 261 "c:\\edk2\\Build\\Ovmf3264\\DEBUG_VS2019\\X64\\MdeModulePkg\\Universal\\DriverSampleDxe\\DriverSampleDxe\\DEBUG\\DriverSampleStrDefs.h"
#line 1 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"











#line 1 "c:\\edk2\\MdePkg\\Include\\Uefi/UefiMultiPhase.h"




































































































































































































































#line 230 "c:\\edk2\\MdePkg\\Include\\Uefi/UefiMultiPhase.h"
#line 13 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"
#line 1 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"






















#line 1 "c:\\edk2\\MdePkg\\Include\\Guid/HiiPlatformSetupFormset.h"



























extern EFI_GUID  gEfiHiiPlatformSetupFormsetGuid;
extern EFI_GUID  gEfiHiiDriverHealthFormsetGuid;
extern EFI_GUID  gEfiHiiUserCredentialFormsetGuid;
extern EFI_GUID  gEfiHiiRestStyleFormsetGuid;

#line 34 "c:\\edk2\\MdePkg\\Include\\Guid/HiiPlatformSetupFormset.h"
#line 24 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 1 "c:\\edk2\\MdePkg\\Include\\Guid/HiiFormMapMethodGuid.h"
















extern EFI_GUID  gEfiHiiStandardFormGuid;

#line 20 "c:\\edk2\\MdePkg\\Include\\Guid/HiiFormMapMethodGuid.h"
#line 25 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 1 "c:\\edk2\\MdeModulePkg\\Include\\Guid/DriverSampleHii.h"


























extern EFI_GUID  { 0xA04A27f4, 0xDF00, 0x4D42, { 0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D }};
extern EFI_GUID  { 0xb3f56470, 0x6141, 0x4621, { 0x8f, 0x19, 0x70, 0x4e, 0x57, 0x7a, 0xa9, 0xe8 }};
extern EFI_GUID  { 0xF5E655D9, 0x02A6, 0x46f2, { 0x9E, 0x76, 0xB8, 0xBE, 0x8E, 0x60, 0xAB, 0x22 }};

#line 32 "c:\\edk2\\MdeModulePkg\\Include\\Guid/DriverSampleHii.h"
#line 26 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 1 "c:\\edk2\\MdeModulePkg\\Include\\Guid/ZeroGuid.h"
















extern EFI_GUID  gZeroGuid;

#line 20 "c:\\edk2\\MdeModulePkg\\Include\\Guid/ZeroGuid.h"
#line 27 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"




#pragma pack(1)









typedef struct {
  UINT16    NestByteField;
  UINT8                     : 1;
  UINT8     NestBitCheckbox : 1;
  UINT8     NestBitOneof    : 2;
  UINT8                     : 0;
  UINT8     NestBitNumeric  : 4;
} MY_BITS_DATA;

typedef union {
  UINT8    UnionNumeric;
  UINT8    UnionNumericAlias;
} MY_EFI_UNION_DATA;

typedef struct {
  UINT16               MyStringData[40];
  UINT16               SomethingHiddenForHtml;
  UINT8                HowOldAreYouInYearsManual;
  UINT16               HowTallAreYouManual;
  UINT8                HowOldAreYouInYears;
  UINT16               HowTallAreYou;
  UINT8                MyFavoriteNumber;
  UINT8                TestLateCheck;
  UINT8                TestLateCheck2;
  UINT8                QuestionAboutTreeHugging;
  UINT8                ChooseToActivateNuclearWeaponry;
  UINT8                SuppressGrayOutSomething;
  UINT8                OrderedList[8];
  UINT16               BootOrder[8];
  UINT8                BootOrderLarge;
  UINT8                DynamicRefresh;
  UINT8                DynamicOneof;
  UINT8                DynamicOrderedList[5];
  UINT8                Reserved;
  EFI_HII_REF          RefData;
  UINT8                NameValueVar0;
  UINT16               NameValueVar1;
  UINT16               NameValueVar2[20];
  UINT8                SerialPortNo;
  UINT8                SerialPortStatus;
  UINT16               SerialPortIo;
  UINT8                SerialPortIrq;
  UINT8                GetDefaultValueFromCallBack;
  UINT8                GetDefaultValueFromAccess;
  EFI_HII_TIME         Time;
  UINT8                RefreshGuidCount;
  UINT8                Match2;
  UINT8                GetDefaultValueFromCallBackForOrderedList[3];
  UINT8                BitCheckbox  : 1;
  UINT8                ReservedBits : 7;
  UINT16               BitOneof     : 6;
  UINT16                            : 0;
  UINT16               BitNumeric   : 12;
  MY_BITS_DATA         MyBitData;
  MY_EFI_UNION_DATA    MyUnionData;
  UINT8                QuestionXUefiKeywordRestStyle;
  UINT8                QuestionNonXUefiKeywordRestStyle;
} DRIVER_SAMPLE_CONFIGURATION;




typedef struct {
  UINT8     Field8;
  UINT16    Field16;
  UINT8     OrderedList[3];
  UINT16    SubmittedCallback;
} MY_EFI_VARSTORE_DATA;



// Data struct def in vfr
typedef struct {
  MY_BITS_DATA    BitsData;
  UINT32          EfiBitGrayoutTest : 5;
  UINT32          EfiBitNumeric     : 4;
  UINT32          EfiBitOneof       : 10;
  UINT32          EfiBitCheckbox    : 1;
  UINT32                            : 0;
} MY_EFI_BITS_VARSTORE_DATA;









#pragma pack()

#line 133 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\NVDataStruc.h"
#line 14 "c:\\edk2\\MdeModulePkg\\Universal\\DriverSampleDxe\\Vfr.vfr"

































formset
>00000000: 0E A7 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 13 00 14 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000039: 5C 06 5B 00 00 00 
>00000045: 5C 06 5D 00 01 00 
  guid      = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} },
  title     = STRING_TOKEN(0x0013),
  help      = STRING_TOKEN(0x0014),
  classguid = { 0x93039971, 0x8545, 0x4b04, { 0xb4, 0x5e, 0x32, 0xeb, 0x83, 0x26, 0x4, 0xe } },













  varstore DRIVER_SAMPLE_CONFIGURATION,
>00000051: 24 22 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 34 12 DB 00 4D 79 49 66 72 4E 56 44 61 74 61 00 
    varid = 0x1234,
    name  = MyIfrNVData,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };




  efivarstore MY_EFI_VARSTORE_DATA,
>00000085: 26 23 01 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name  = MyEfiVar,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };




  efivarstore MY_EFI_BITS_VARSTORE_DATA,
>00000120: 26 26 02 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 42 69 74 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name  = MyEfiBitVar,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };

  efivarstore MY_EFI_UNION_DATA,
>00000158: 26 28 03 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 01 00 4D 79 45 66 69 55 6E 69 6F 6E 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name  = MyEfiUnionVar,
    guid  = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };




  namevaluevarstore MyNameValueVar,
>00000198: 25 14 04 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
    name = STRING_TOKEN(0x0092),
    name = STRING_TOKEN(0x0093),
    name = STRING_TOKEN(0x0094),
    guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };

  defaultstore MyStandardDefault,
    prompt      = STRING_TOKEN(0x005B),
    attribute   = 0x0000;

  defaultstore MyManufactureDefault,
    prompt      = STRING_TOKEN(0x005D),
    attribute   = 0x0001;




  form formid = 1,
>00000218: 01 86 01 00 15 00 
       title  = STRING_TOKEN(0x0015);

    subtitle text = STRING_TOKEN(0x001A);
>00000224: 02 87 1A 00 00 00 00 
>00000231: 29 02 
    subtitle text = STRING_TOKEN(0x001B);
>00000233: 02 87 1B 00 00 00 00 
>00000240: 29 02 




    text
>00000242: 03 08 1C 00 50 00 1D 00 
      help   = STRING_TOKEN(0x0050),
      text   = STRING_TOKEN(0x001C),
        text   = STRING_TOKEN(0x001D);

    text
      help   = STRING_TOKEN(0x0054),
      text   = STRING_TOKEN(0x0054),
      flags  = INTERACTIVE,
>00000250: 0C 8F 54 00 54 00 37 12 00 00 FF FF 04 00 00 
      key    = 0x1237;
>00000265: 29 02 

    text
      help   = STRING_TOKEN(0x0055),
      text   = STRING_TOKEN(0x0055),
      flags  = INTERACTIVE,
>00000267: 0C 8F 55 00 55 00 38 12 00 00 FF FF 04 00 00 
      key    = 0x1238;
>00000282: 29 02 

    oneof name = MyOneOf,
>00000284: 05 91 1F 00 26 00 01 00 34 12 5D 00 00 10 00 02 00 
      varid   = MyIfrNVData.SuppressGrayOutSomething,
      prompt  = STRING_TOKEN(0x001F),
      help    = STRING_TOKEN(0x0026),



      option text = STRING_TOKEN(0x002A), value = 0x0, flags = 0;
>00000301: 09 07 2A 00 00 00 00 
      option text = STRING_TOKEN(0x002B), value = 0x1, flags = 0;
>00000308: 09 07 2B 00 00 00 01 



      option text = STRING_TOKEN(0x002C), value = 0x2, flags = DEFAULT;
>00000315: 09 07 2C 00 10 00 02 
    endoneof;
>00000322: 29 02 

    oneof varid  = MyIfrNVData.BootOrderLarge,
>00000324: 05 91 1F 00 26 00 02 00 34 12 76 00 00 10 00 01 00 
      prompt      = STRING_TOKEN(0x001F),
      help        = STRING_TOKEN(0x0026),
      default value = cond (pushthis == 0 ? 0 : cond ((questionref(MyOneOf) >> 0x4 & 0xF00) == 0x0 + 0x2 ? 0 : 1)),
>00000341: 5B 85 00 00 08 
>00000346: 5A 82 
>00000348: 58 82 
>00000350: 45 0A 00 00 00 00 00 00 00 00 
>00000360: 2F 02 
>00000362: 45 0A 00 00 00 00 00 00 00 00 
>00000372: 40 04 01 00 
>00000376: 45 0A 04 00 00 00 00 00 00 00 
>00000386: 39 02 
>00000388: 45 0A 00 0F 00 00 00 00 00 00 
>00000398: 35 02 
>00000400: 45 0A 00 00 00 00 00 00 00 00 
>00000410: 45 0A 02 00 00 00 00 00 00 00 
>00000420: 3A 02 
>00000422: 2F 02 
>00000424: 45 0A 00 00 00 00 00 00 00 00 
>00000434: 45 0A 01 00 00 00 00 00 00 00 
>00000444: 50 02 
>00000446: 50 02 
>00000448: 29 02 
>00000450: 29 02 
>00000452: 29 02 
      option text = STRING_TOKEN(0x002D), value = 0x0, flags = 0;
>00000454: 09 07 2D 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 0x1, flags = 0;
>00000461: 09 07 2E 00 00 00 01 
    endoneof;
>00000468: 29 02 

    grayoutif  ideqval MyIfrNVData.SuppressGrayOutSomething == 0x1;
>00000470: 19 82 
>00000472: 12 06 01 00 01 00 
      suppressif questionref(MyOneOf) == 0x0;
>00000478: 0A 82 
>00000480: 40 84 01 00 
>00000484: 45 0A 00 00 00 00 00 00 00 00 
>00000494: 2F 02 
>00000496: 29 02 

        checkbox varid   = MyIfrNVData.ChooseToActivateNuclearWeaponry,
>00000498: 06 8E 2F 00 30 00 03 00 34 12 5C 00 00 03 
                 prompt   = STRING_TOKEN(0x002F),
                 help     = STRING_TOKEN(0x0030),




                 flags    = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG,
                 default  = TRUE,
>00000512: 5B 06 00 00 00 01 
        endcheckbox;
>00000518: 29 02 
      endif;
>00000520: 29 02 
    endif;
>00000522: 29 02 
      label 0x2222;
>00000524: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 22 22 

      orderedlist
>00000545: 23 8F 8D 00 5A 00 04 00 34 12 66 00 10 08 00 
                varid       = MyIfrNVData.BootOrder,
                prompt      = STRING_TOKEN(0x008D),
                help        = STRING_TOKEN(0x005A),
                flags       = RESET_REQUIRED,
                option text = STRING_TOKEN(0x008F), value = 2, flags = 0;
>00000560: 09 08 8F 00 01 01 02 00 
                option text = STRING_TOKEN(0x008E), value = 1, flags = 0;
>00000568: 09 08 8E 00 01 01 01 00 
                option text = STRING_TOKEN(0x0090), value = 3, flags = 0;
>00000576: 09 08 90 00 01 01 03 00 
              suppressif ideqval MyIfrNVData.BootOrderLarge == 0;
>00000584: 0A 82 
>00000586: 12 06 02 00 00 00 
                option text = STRING_TOKEN(0x0091), value = 4, flags = 0;
>00000592: 09 08 91 00 01 01 04 00 
              endif;
>00000600: 29 02 
      endlist;
>00000602: 29 02 

  endform;
>00000604: 29 02 

endformset;
>00000606: 29 02 
//
//  All Opcode Record List
//
>00000000: 0E A7 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 13 00 14 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000039: 5C 06 5B 00 00 00 
>00000045: 5C 06 5D 00 01 00 
>00000051: 24 22 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 34 12 DB 00 4D 79 49 66 72 4E 56 44 61 74 61 00 
>00000085: 26 23 01 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 56 61 72 00 
>00000120: 26 26 02 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 42 69 74 56 61 72 00 
>00000158: 26 28 03 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 01 00 4D 79 45 66 69 55 6E 69 6F 6E 56 61 72 00 
>00000198: 25 14 04 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
>00000218: 01 86 01 00 15 00 
>00000224: 02 87 1A 00 00 00 00 
>00000231: 29 02 
>00000233: 02 87 1B 00 00 00 00 
>00000240: 29 02 
>00000242: 03 08 1C 00 50 00 1D 00 
>00000250: 0C 8F 54 00 54 00 37 12 00 00 FF FF 04 00 00 
>00000265: 29 02 
>00000267: 0C 8F 55 00 55 00 38 12 00 00 FF FF 04 00 00 
>00000282: 29 02 
>00000284: 05 91 1F 00 26 00 01 00 34 12 5D 00 00 10 00 02 00 
>00000301: 09 07 2A 00 00 00 00 
>00000308: 09 07 2B 00 00 00 01 
>00000315: 09 07 2C 00 10 00 02 
>00000322: 29 02 
>00000324: 05 91 1F 00 26 00 02 00 34 12 76 00 00 10 00 01 00 
>00000341: 5B 85 00 00 08 
>00000346: 5A 82 
>00000348: 58 82 
>00000350: 45 0A 00 00 00 00 00 00 00 00 
>00000360: 2F 02 
>00000362: 45 0A 00 00 00 00 00 00 00 00 
>00000372: 40 04 01 00 
>00000376: 45 0A 04 00 00 00 00 00 00 00 
>00000386: 39 02 
>00000388: 45 0A 00 0F 00 00 00 00 00 00 
>00000398: 35 02 
>00000400: 45 0A 00 00 00 00 00 00 00 00 
>00000410: 45 0A 02 00 00 00 00 00 00 00 
>00000420: 3A 02 
>00000422: 2F 02 
>00000424: 45 0A 00 00 00 00 00 00 00 00 
>00000434: 45 0A 01 00 00 00 00 00 00 00 
>00000444: 50 02 
>00000446: 50 02 
>00000448: 29 02 
>00000450: 29 02 
>00000452: 29 02 
>00000454: 09 07 2D 00 00 00 00 
>00000461: 09 07 2E 00 00 00 01 
>00000468: 29 02 
>00000470: 19 82 
>00000472: 12 06 01 00 01 00 
>00000478: 0A 82 
>00000480: 40 84 01 00 
>00000484: 45 0A 00 00 00 00 00 00 00 00 
>00000494: 2F 02 
>00000496: 29 02 
>00000498: 06 8E 2F 00 30 00 03 00 34 12 5C 00 00 03 
>00000512: 5B 06 00 00 00 01 
>00000518: 29 02 
>00000520: 29 02 
>00000522: 29 02 
>00000524: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 22 22 
>00000545: 23 8F 8D 00 5A 00 04 00 34 12 66 00 10 08 00 
>00000560: 09 08 8F 00 01 01 02 00 
>00000568: 09 08 8E 00 01 01 01 00 
>00000576: 09 08 90 00 01 01 03 00 
>00000584: 0A 82 
>00000586: 12 06 02 00 00 00 
>00000592: 09 08 91 00 01 01 04 00 
>00000600: 29 02 
>00000602: 29 02 
>00000604: 29 02 
>00000606: 29 02 

Total Size of all record is 00000608

***************************************************************
PackAlign = 8
		struct MY_EFI_BITS_VARSTORE_DATA : Align : [1]  TotalSize : [0x8]

		struct MY_EFI_BITS_VARSTORE_DATA	{
			+00000000[00000000] BitsData <MY_BITS_DATA>
			+00000004[00000004] EfiBitGrayoutTest <UINT32>
			+00000004[00000004] EfiBitNumeric <UINT32>
			+00000004[00000004] EfiBitOneof <UINT32>
			+00000004[00000004] EfiBitCheckbox <UINT32>
			+00000004[00000004] <UINT32>
		};
---------------------------------------------------------------
		struct MY_EFI_VARSTORE_DATA : Align : [1]  TotalSize : [0x8]

		struct MY_EFI_VARSTORE_DATA	{
			+00000000[00000000] Field8 <UINT8>
			+00000001[00000001] Field16 <UINT16>
			+00000003[00000003] OrderedList[3] <UINT8>
			+00000006[00000006] SubmittedCallback <UINT16>
		};
---------------------------------------------------------------
		struct DRIVER_SAMPLE_CONFIGURATION : Align : [1]  TotalSize : [0xdb]

		struct DRIVER_SAMPLE_CONFIGURATION	{
			+00000000[00000000] MyStringData[40] <UINT16>
			+00000080[00000050] SomethingHiddenForHtml <UINT16>
			+00000082[00000052] HowOldAreYouInYearsManual <UINT8>
			+00000083[00000053] HowTallAreYouManual <UINT16>
			+00000085[00000055] HowOldAreYouInYears <UINT8>
			+00000086[00000056] HowTallAreYou <UINT16>
			+00000088[00000058] MyFavoriteNumber <UINT8>
			+00000089[00000059] TestLateCheck <UINT8>
			+00000090[0000005a] TestLateCheck2 <UINT8>
			+00000091[0000005b] QuestionAboutTreeHugging <UINT8>
			+00000092[0000005c] ChooseToActivateNuclearWeaponry <UINT8>
			+00000093[0000005d] SuppressGrayOutSomething <UINT8>
			+00000094[0000005e] OrderedList[8] <UINT8>
			+00000102[00000066] BootOrder[8] <UINT16>
			+00000118[00000076] BootOrderLarge <UINT8>
			+00000119[00000077] DynamicRefresh <UINT8>
			+00000120[00000078] DynamicOneof <UINT8>
			+00000121[00000079] DynamicOrderedList[5] <UINT8>
			+00000126[0000007e] Reserved <UINT8>
			+00000127[0000007f] RefData <EFI_HII_REF>
			+00000149[00000095] NameValueVar0 <UINT8>
			+00000150[00000096] NameValueVar1 <UINT16>
			+00000152[00000098] NameValueVar2[20] <UINT16>
			+00000192[000000c0] SerialPortNo <UINT8>
			+00000193[000000c1] SerialPortStatus <UINT8>
			+00000194[000000c2] SerialPortIo <UINT16>
			+00000196[000000c4] SerialPortIrq <UINT8>
			+00000197[000000c5] GetDefaultValueFromCallBack <UINT8>
			+00000198[000000c6] GetDefaultValueFromAccess <UINT8>
			+00000199[000000c7] Time <EFI_HII_TIME>
			+00000202[000000ca] RefreshGuidCount <UINT8>
			+00000203[000000cb] Match2 <UINT8>
			+00000204[000000cc] GetDefaultValueFromCallBackForOrderedList[3] <UINT8>
			+00000207[000000cf] BitCheckbox <UINT8>
			+00000207[000000cf] ReservedBits <UINT8>
			+00000208[000000d0] BitOneof <UINT16>
			+00000208[000000d0] <UINT16>
			+00000210[000000d2] BitNumeric <UINT16>
			+00000212[000000d4] MyBitData <MY_BITS_DATA>
			+00000216[000000d8] MyUnionData <MY_EFI_UNION_DATA>
			+00000217[000000d9] QuestionXUefiKeywordRestStyle <UINT8>
			+00000218[000000da] QuestionNonXUefiKeywordRestStyle <UINT8>
		};
---------------------------------------------------------------
		struct MY_EFI_UNION_DATA : Align : [1]  TotalSize : [0x1]

		struct MY_EFI_UNION_DATA	{
			+00000000[00000000] UnionNumeric <UINT8>
			+00000000[00000000] UnionNumericAlias <UINT8>
		};
---------------------------------------------------------------
		struct MY_BITS_DATA : Align : [1]  TotalSize : [0x4]

		struct MY_BITS_DATA	{
			+00000000[00000000] NestByteField <UINT16>
			+00000002[00000002] <UINT8>
			+00000002[00000002] NestBitCheckbox <UINT8>
			+00000002[00000002] NestBitOneof <UINT8>
			+00000002[00000002] <UINT8>
			+00000003[00000003] NestBitNumeric <UINT8>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : Align : [16]  TotalSize : [0x16]

		struct EFI_HII_REF	{
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <EFI_GUID>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : Align : [1]  TotalSize : [0x3]

		struct EFI_HII_TIME	{
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : Align : [2]  TotalSize : [0x2]

		struct EFI_STRING_ID	{
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : Align : [2]  TotalSize : [0x4]

		struct EFI_HII_DATE	{
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct EFI_GUID : Align : [8]  TotalSize : [0x10]

		struct EFI_GUID	{
		};
---------------------------------------------------------------
		struct BOOLEAN : Align : [1]  TotalSize : [0x1]

		struct BOOLEAN	{
		};
---------------------------------------------------------------
		struct UINT8 : Align : [1]  TotalSize : [0x1]

		struct UINT8	{
		};
---------------------------------------------------------------
		struct UINT16 : Align : [2]  TotalSize : [0x2]

		struct UINT16	{
		};
---------------------------------------------------------------
		struct UINT32 : Align : [4]  TotalSize : [0x4]

		struct UINT32	{
		};
---------------------------------------------------------------
		struct UINT64 : Align : [8]  TotalSize : [0x8]

		struct UINT64	{
		};
---------------------------------------------------------------
***************************************************************
